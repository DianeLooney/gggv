version: 2.1

orbs:
  # codecov: codecov/codecov@1.0.5
  win: circleci/windows@1.0.0
  docker: circleci/docker@0.5.20

executors:
  base-linux:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/dianelooney/gggv

commands:
  install-deps:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run: sudo ./build/gggv/configure.sh
      - run: go get -v -t -d ./...
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /go/pkg

  install-deps-windows:
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: choco install mingw pkgconfiglite
      - run:
          name: Setup pkg-config stubs
          command: ./build/windows/configure.sh
      # - run:
      #     name: Install Portaudio
      #     command: |
      #       curl http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz > /tmp/portaudio.tgz
      #       7z x /tmp/portaudio.tgz -o/tmp/
      #       7z x /tmp/portaudio.tar -o/tmp/
      #       cd /tmp/portaudio && ./configure && make install
      - run:
          name: Install FFMPEG-dev
          command: |
            curl https://ffmpeg.zeranoe.com/builds/win64/dev/ffmpeg-latest-win64-dev.zip > /tmp/ffmpeg-latest-win64-dev.zip
            unzip /tmp/ffmpeg-latest-win64-dev.zip -d /tmp/
      - run:
          name: Install go 1.13
          command: choco install golang --force

jobs:
  vet:
    executor: base-linux
    steps:
      - install-deps
      - run: go vet -unsafeptr=false $(go list ./... | grep -v /wrappers/)
  test:
    executor: base-linux
    environment:
      CGO_CFLAGS: -w
      COV_FILE: /tmp/coverage/c.out
      DISPLAY: :0
    steps:
      - install-deps
      - run:
          command: |
            mkdir $(dirname ${COV_FILE})
            Xvfb :0 & go test -v $(go list ./... | grep -v /vendor/) -coverprofile=${COV_FILE}
      - run: go tool cover -html=${COV_FILE} -o ${COV_FILE/%.out/.html}
      - store_artifacts:
          path: /tmp/coverage
  #     - codecov/upload:
  #         file: /tmp/coverage/c.out

  win-build:
    environment:
      PKG_CONFIG_PATH: /tmp/pkg-config
      CGO_LDFLAGS: -L/tmp/ffmpeg-latest-win64-dev/lib/ -lavcodec -lavformat -lavutil -lswscale -lswresample -lavdevice -lavfilter
      CGO_CFLAGS: -I/tmp/ffmpeg-latest-win64-dev/include -w
      LD_LIBRARY_PATH: /tmp/ffmpeg-latest-win64-dev/lib

    executor:
      name: win/vs2019
      shell: bash.exe

    steps:
      - install-deps-windows
      - run:
          name: Build Daemon
          command: go build -o=daemon.exe cmd/daemon/main.go
      - store_artifacts:
          path: daemon.exe
          destination: daemon.exe

workflows:
  version: 2
  base-image-update:
    triggers:
      - schedule:
          cron: "0 0 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - docker/publish:
          image: diane/gggv-base
          tag: latest
          extra_build_args: "-v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0 -v $HOME/.Xauthority:/root/.Xauthority --target base"
          docker-password: DOCKERHUB_PASS
          docker-username: DOCKERHUB_USERNAME
          dockerfile: build/gggv/Dockerfile
  release:
    jobs:
      - vet
      - test
      - win-build:
          requires:
            - vet
            - test
          filters:
            branches:
              only: master
      - docker/publish:
          image: diane/gggv
          tag: latest
          docker-password: DOCKERHUB_PASS
          docker-username: DOCKERHUB_USERNAME
          dockerfile: build/gggv/Dockerfile
          requires:
            - vet
            - test
          filters:
            branches:
              only: master
