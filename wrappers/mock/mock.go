package mock

import (
	"unsafe"

	"github.com/dianelooney/gggv/internal/carbon"
)

func init() {
	Init()
}

func Init() {
	initHelpers()

	carbon.Accum = func(op uint32, value float32) {}
	carbon.ActiveProgramEXT = func(program uint32) {}
	carbon.ActiveShaderProgram = func(pipeline uint32, program uint32) {}
	carbon.ActiveShaderProgramEXT = func(pipeline uint32, program uint32) {}
	carbon.ActiveTexture = func(texture uint32) {}
	carbon.AlphaFunc = func(xfunc uint32, ref float32) {}
	carbon.ApplyFramebufferAttachmentCMAAINTEL = func() {}
	carbon.AreTexturesResident = func(n int32, textures *uint32, residences *bool) bool { return false }
	carbon.ArrayElement = func(i int32) {}
	carbon.AttachShader = func(program uint32, shader uint32) {}
	carbon.Begin = func(mode uint32) {}
	carbon.BeginConditionalRender = func(id uint32, mode uint32) {}
	carbon.BeginConditionalRenderNV = func(id uint32, mode uint32) {}
	carbon.BeginPerfMonitorAMD = func(monitor uint32) {}
	carbon.BeginPerfQueryINTEL = func(queryHandle uint32) {}
	carbon.BeginQuery = func(target uint32, id uint32) {}
	carbon.BeginQueryIndexed = func(target uint32, index uint32, id uint32) {}
	carbon.BeginTransformFeedback = func(primitiveMode uint32) {}
	carbon.BindAttribLocation = func(program uint32, index uint32, name *uint8) {}
	carbon.BindBuffer = func(target uint32, buffer uint32) {}
	carbon.BindBufferBase = func(target uint32, index uint32, buffer uint32) {}
	carbon.BindBufferRange = func(target uint32, index uint32, buffer uint32, offset int, size int) {}
	carbon.BindBuffersBase = func(target uint32, first uint32, count int32, buffers *uint32) {}
	carbon.BindBuffersRange = func(target uint32, first uint32, count int32, buffers *uint32, offsets *int, sizes *int) {}
	carbon.BindFragDataLocation = func(program uint32, color uint32, name *uint8) {}
	carbon.BindFragDataLocationIndexed = func(program uint32, colorNumber uint32, index uint32, name *uint8) {}
	carbon.BindFramebuffer = func(target uint32, framebuffer uint32) {}
	carbon.BindImageTexture = func(unit uint32, texture uint32, level int32, layered bool, layer int32, access uint32, format uint32) {
	}
	carbon.BindImageTextures = func(first uint32, count int32, textures *uint32) {}
	carbon.BindMultiTextureEXT = func(texunit uint32, target uint32, texture uint32) {}
	carbon.BindProgramPipeline = func(pipeline uint32) {}
	carbon.BindProgramPipelineEXT = func(pipeline uint32) {}
	carbon.BindRenderbuffer = func(target uint32, renderbuffer uint32) {}
	carbon.BindSampler = func(unit uint32, sampler uint32) {}
	carbon.BindSamplers = func(first uint32, count int32, samplers *uint32) {}
	carbon.BindTexture = func(target uint32, texture uint32) {}
	carbon.BindTextureUnit = func(unit uint32, texture uint32) {}
	carbon.BindTextures = func(first uint32, count int32, textures *uint32) {}
	carbon.BindTransformFeedback = func(target uint32, id uint32) {}
	carbon.BindVertexArray = func(array uint32) {}
	carbon.BindVertexBuffer = func(bindingindex uint32, buffer uint32, offset int, stride int32) {}
	carbon.BindVertexBuffers = func(first uint32, count int32, buffers *uint32, offsets *int, strides *int32) {}
	carbon.Bitmap = func(width int32, height int32, xorig float32, yorig float32, xmove float32, ymove float32, bitmap *uint8) {
	}
	carbon.BlendBarrierKHR = func() {}
	carbon.BlendBarrierNV = func() {}
	carbon.BlendColor = func(red float32, green float32, blue float32, alpha float32) {}
	carbon.BlendEquation = func(mode uint32) {}
	carbon.BlendEquationSeparate = func(modeRGB uint32, modeAlpha uint32) {}
	carbon.BlendEquationSeparatei = func(buf uint32, modeRGB uint32, modeAlpha uint32) {}
	carbon.BlendEquationSeparateiARB = func(buf uint32, modeRGB uint32, modeAlpha uint32) {}
	carbon.BlendEquationi = func(buf uint32, mode uint32) {}
	carbon.BlendEquationiARB = func(buf uint32, mode uint32) {}
	carbon.BlendFunc = func(sfactor uint32, dfactor uint32) {}
	carbon.BlendFuncSeparate = func(sfactorRGB uint32, dfactorRGB uint32, sfactorAlpha uint32, dfactorAlpha uint32) {}
	carbon.BlendFuncSeparatei = func(buf uint32, srcRGB uint32, dstRGB uint32, srcAlpha uint32, dstAlpha uint32) {}
	carbon.BlendFuncSeparateiARB = func(buf uint32, srcRGB uint32, dstRGB uint32, srcAlpha uint32, dstAlpha uint32) {}
	carbon.BlendFunci = func(buf uint32, src uint32, dst uint32) {}
	carbon.BlendFunciARB = func(buf uint32, src uint32, dst uint32) {}
	carbon.BlendParameteriNV = func(pname uint32, value int32) {}
	carbon.BlitFramebuffer = func(srcX0 int32, srcY0 int32, srcX1 int32, srcY1 int32, dstX0 int32, dstY0 int32, dstX1 int32, dstY1 int32, mask uint32, filter uint32) {
	}
	carbon.BlitNamedFramebuffer = func(readFramebuffer uint32, drawFramebuffer uint32, srcX0 int32, srcY0 int32, srcX1 int32, srcY1 int32, dstX0 int32, dstY0 int32, dstX1 int32, dstY1 int32, mask uint32, filter uint32) {
	}
	carbon.BufferAddressRangeNV = func(pname uint32, index uint32, address uint64, length int) {}
	carbon.BufferData = func(target uint32, size int, data unsafe.Pointer, usage uint32) {}
	carbon.BufferPageCommitmentARB = func(target uint32, offset int, size int, commit bool) {}
	carbon.BufferStorage = func(target uint32, size int, data unsafe.Pointer, flags uint32) {}
	carbon.BufferSubData = func(target uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.CallCommandListNV = func(list uint32) {}
	carbon.CallList = func(list uint32) {}
	carbon.CallLists = func(n int32, xtype uint32, lists unsafe.Pointer) {}
	carbon.CheckFramebufferStatus = func(target uint32) uint32 { return 0 }
	carbon.CheckNamedFramebufferStatus = func(framebuffer uint32, target uint32) uint32 { return 0 }
	carbon.CheckNamedFramebufferStatusEXT = func(framebuffer uint32, target uint32) uint32 { return 0 }
	carbon.ClampColor = func(target uint32, clamp uint32) {}
	carbon.Clear = func(mask uint32) {}
	carbon.ClearAccum = func(red float32, green float32, blue float32, alpha float32) {}
	carbon.ClearBufferData = func(target uint32, internalformat uint32, format uint32, xtype uint32, data unsafe.Pointer) {}
	carbon.ClearBufferSubData = func(target uint32, internalformat uint32, offset int, size int, format uint32, xtype uint32, data unsafe.Pointer) {
	}
	carbon.ClearBufferfi = func(buffer uint32, drawbuffer int32, depth float32, stencil int32) {}
	carbon.ClearBufferfv = func(buffer uint32, drawbuffer int32, value *float32) {}
	carbon.ClearBufferiv = func(buffer uint32, drawbuffer int32, value *int32) {}
	carbon.ClearBufferuiv = func(buffer uint32, drawbuffer int32, value *uint32) {}
	carbon.ClearColor = func(red float32, green float32, blue float32, alpha float32) {}
	carbon.ClearDepth = func(depth float64) {}
	carbon.ClearDepthf = func(d float32) {}
	carbon.ClearIndex = func(c float32) {}
	carbon.ClearNamedBufferData = func(buffer uint32, internalformat uint32, format uint32, xtype uint32, data unsafe.Pointer) {}
	carbon.ClearNamedBufferDataEXT = func(buffer uint32, internalformat uint32, format uint32, xtype uint32, data unsafe.Pointer) {}
	carbon.ClearNamedBufferSubData = func(buffer uint32, internalformat uint32, offset int, size int, format uint32, xtype uint32, data unsafe.Pointer) {
	}
	carbon.ClearNamedBufferSubDataEXT = func(buffer uint32, internalformat uint32, offset int, size int, format uint32, xtype uint32, data unsafe.Pointer) {
	}
	carbon.ClearNamedFramebufferfi = func(framebuffer uint32, buffer uint32, drawbuffer int32, depth float32, stencil int32) {}
	carbon.ClearNamedFramebufferfv = func(framebuffer uint32, buffer uint32, drawbuffer int32, value *float32) {}
	carbon.ClearNamedFramebufferiv = func(framebuffer uint32, buffer uint32, drawbuffer int32, value *int32) {}
	carbon.ClearNamedFramebufferuiv = func(framebuffer uint32, buffer uint32, drawbuffer int32, value *uint32) {}
	carbon.ClearStencil = func(s int32) {}
	carbon.ClearTexImage = func(texture uint32, level int32, format uint32, xtype uint32, data unsafe.Pointer) {}
	carbon.ClearTexSubImage = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, data unsafe.Pointer) {
	}
	carbon.ClientActiveTexture = func(texture uint32) {}
	carbon.ClientAttribDefaultEXT = func(mask uint32) {}
	carbon.ClientWaitSync = func(sync uintptr, flags uint32, timeout uint64) uint32 { return 0 }
	carbon.ClipControl = func(origin uint32, depth uint32) {}
	carbon.ClipPlane = func(plane uint32, equation *float64) {}
	carbon.Color3b = func(red int8, green int8, blue int8) {}
	carbon.Color3bv = func(v *int8) {}
	carbon.Color3d = func(red float64, green float64, blue float64) {}
	carbon.Color3dv = func(v *float64) {}
	carbon.Color3f = func(red float32, green float32, blue float32) {}
	carbon.Color3fv = func(v *float32) {}
	carbon.Color3i = func(red int32, green int32, blue int32) {}
	carbon.Color3iv = func(v *int32) {}
	carbon.Color3s = func(red int16, green int16, blue int16) {}
	carbon.Color3sv = func(v *int16) {}
	carbon.Color3ub = func(red uint8, green uint8, blue uint8) {}
	carbon.Color3ubv = func(v *uint8) {}
	carbon.Color3ui = func(red uint32, green uint32, blue uint32) {}
	carbon.Color3uiv = func(v *uint32) {}
	carbon.Color3us = func(red uint16, green uint16, blue uint16) {}
	carbon.Color3usv = func(v *uint16) {}
	carbon.Color4b = func(red int8, green int8, blue int8, alpha int8) {}
	carbon.Color4bv = func(v *int8) {}
	carbon.Color4d = func(red float64, green float64, blue float64, alpha float64) {}
	carbon.Color4dv = func(v *float64) {}
	carbon.Color4f = func(red float32, green float32, blue float32, alpha float32) {}
	carbon.Color4fv = func(v *float32) {}
	carbon.Color4i = func(red int32, green int32, blue int32, alpha int32) {}
	carbon.Color4iv = func(v *int32) {}
	carbon.Color4s = func(red int16, green int16, blue int16, alpha int16) {}
	carbon.Color4sv = func(v *int16) {}
	carbon.Color4ub = func(red uint8, green uint8, blue uint8, alpha uint8) {}
	carbon.Color4ubv = func(v *uint8) {}
	carbon.Color4ui = func(red uint32, green uint32, blue uint32, alpha uint32) {}
	carbon.Color4uiv = func(v *uint32) {}
	carbon.Color4us = func(red uint16, green uint16, blue uint16, alpha uint16) {}
	carbon.Color4usv = func(v *uint16) {}
	carbon.ColorFormatNV = func(size int32, xtype uint32, stride int32) {}
	carbon.ColorMask = func(red bool, green bool, blue bool, alpha bool) {}
	carbon.ColorMaski = func(index uint32, r bool, g bool, b bool, a bool) {}
	carbon.ColorMaterial = func(face uint32, mode uint32) {}
	carbon.ColorPointer = func(size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.CommandListSegmentsNV = func(list uint32, segments uint32) {}
	carbon.CompileCommandListNV = func(list uint32) {}
	carbon.CompileShader = func(shader uint32) {}
	carbon.CompileShaderIncludeARB = func(shader uint32, count int32, path **uint8, length *int32) {}
	carbon.CompressedMultiTexImage1DEXT = func(texunit uint32, target uint32, level int32, internalformat uint32, width int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedMultiTexImage2DEXT = func(texunit uint32, target uint32, level int32, internalformat uint32, width int32, height int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedMultiTexImage3DEXT = func(texunit uint32, target uint32, level int32, internalformat uint32, width int32, height int32, depth int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedMultiTexSubImage1DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, width int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedMultiTexSubImage2DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedMultiTexSubImage3DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTexImage1D = func(target uint32, level int32, internalformat uint32, width int32, border int32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTexImage2D = func(target uint32, level int32, internalformat uint32, width int32, height int32, border int32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTexImage3D = func(target uint32, level int32, internalformat uint32, width int32, height int32, depth int32, border int32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTexSubImage1D = func(target uint32, level int32, xoffset int32, width int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTexSubImage2D = func(target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTexSubImage3D = func(target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTextureImage1DEXT = func(texture uint32, target uint32, level int32, internalformat uint32, width int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTextureImage2DEXT = func(texture uint32, target uint32, level int32, internalformat uint32, width int32, height int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTextureImage3DEXT = func(texture uint32, target uint32, level int32, internalformat uint32, width int32, height int32, depth int32, border int32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage1D = func(texture uint32, level int32, xoffset int32, width int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage1DEXT = func(texture uint32, target uint32, level int32, xoffset int32, width int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage2D = func(texture uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage2DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage3D = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, imageSize int32, data unsafe.Pointer) {
	}
	carbon.CompressedTextureSubImage3DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, imageSize int32, bits unsafe.Pointer) {
	}
	carbon.ConservativeRasterParameterfNV = func(pname uint32, value float32) {}
	carbon.ConservativeRasterParameteriNV = func(pname uint32, param int32) {}
	carbon.CopyBufferSubData = func(readTarget uint32, writeTarget uint32, readOffset int, writeOffset int, size int) {}
	carbon.CopyImageSubData = func(srcName uint32, srcTarget uint32, srcLevel int32, srcX int32, srcY int32, srcZ int32, dstName uint32, dstTarget uint32, dstLevel int32, dstX int32, dstY int32, dstZ int32, srcWidth int32, srcHeight int32, srcDepth int32) {
	}
	carbon.CopyMultiTexImage1DEXT = func(texunit uint32, target uint32, level int32, internalformat uint32, x int32, y int32, width int32, border int32) {
	}
	carbon.CopyMultiTexImage2DEXT = func(texunit uint32, target uint32, level int32, internalformat uint32, x int32, y int32, width int32, height int32, border int32) {
	}
	carbon.CopyMultiTexSubImage1DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, x int32, y int32, width int32) {}
	carbon.CopyMultiTexSubImage2DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyMultiTexSubImage3DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyNamedBufferSubData = func(readBuffer uint32, writeBuffer uint32, readOffset int, writeOffset int, size int) {}
	carbon.CopyPathNV = func(resultPath uint32, srcPath uint32) {}
	carbon.CopyPixels = func(x int32, y int32, width int32, height int32, xtype uint32) {}
	carbon.CopyTexImage1D = func(target uint32, level int32, internalformat uint32, x int32, y int32, width int32, border int32) {}
	carbon.CopyTexImage2D = func(target uint32, level int32, internalformat uint32, x int32, y int32, width int32, height int32, border int32) {
	}
	carbon.CopyTexSubImage1D = func(target uint32, level int32, xoffset int32, x int32, y int32, width int32) {}
	carbon.CopyTexSubImage2D = func(target uint32, level int32, xoffset int32, yoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyTexSubImage3D = func(target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyTextureImage1DEXT = func(texture uint32, target uint32, level int32, internalformat uint32, x int32, y int32, width int32, border int32) {
	}
	carbon.CopyTextureImage2DEXT = func(texture uint32, target uint32, level int32, internalformat uint32, x int32, y int32, width int32, height int32, border int32) {
	}
	carbon.CopyTextureSubImage1D = func(texture uint32, level int32, xoffset int32, x int32, y int32, width int32) {}
	carbon.CopyTextureSubImage1DEXT = func(texture uint32, target uint32, level int32, xoffset int32, x int32, y int32, width int32) {}
	carbon.CopyTextureSubImage2D = func(texture uint32, level int32, xoffset int32, yoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyTextureSubImage2DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyTextureSubImage3D = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CopyTextureSubImage3DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, x int32, y int32, width int32, height int32) {
	}
	carbon.CoverFillPathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, coverMode uint32, transformType uint32, transformValues *float32) {
	}
	carbon.CoverFillPathNV = func(path uint32, coverMode uint32) {}
	carbon.CoverStrokePathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, coverMode uint32, transformType uint32, transformValues *float32) {
	}
	carbon.CoverStrokePathNV = func(path uint32, coverMode uint32) {}
	carbon.CoverageModulationNV = func(components uint32) {}
	carbon.CoverageModulationTableNV = func(n int32, v *float32) {}
	carbon.CreateBuffers = func(n int32, buffers *uint32) {}
	carbon.CreateCommandListsNV = func(n int32, lists *uint32) {}
	carbon.CreateFramebuffers = func(n int32, framebuffers *uint32) {}
	carbon.CreatePerfQueryINTEL = func(queryId uint32, queryHandle *uint32) {}
	carbon.CreateProgram = func() uint32 { return 0 }
	carbon.CreateProgramPipelines = func(n int32, pipelines *uint32) {}
	carbon.CreateQueries = func(target uint32, n int32, ids *uint32) {}
	carbon.CreateRenderbuffers = func(n int32, renderbuffers *uint32) {}
	carbon.CreateSamplers = func(n int32, samplers *uint32) {}
	carbon.CreateShader = func(xtype uint32) uint32 { return 0 }
	carbon.CreateShaderProgramEXT = func(xtype uint32, xstring *uint8) uint32 { return 0 }
	carbon.CreateShaderProgramv = func(xtype uint32, count int32, strings **uint8) uint32 { return 0 }
	carbon.CreateShaderProgramvEXT = func(xtype uint32, count int32, strings **uint8) uint32 { return 0 }
	carbon.CreateStatesNV = func(n int32, states *uint32) {}
	carbon.CreateSyncFromCLeventARB = func(context unsafe.Pointer, event unsafe.Pointer, flags uint32) uintptr { return 0 }
	carbon.CreateTextures = func(target uint32, n int32, textures *uint32) {}
	carbon.CreateTransformFeedbacks = func(n int32, ids *uint32) {}
	carbon.CreateVertexArrays = func(n int32, arrays *uint32) {}
	carbon.CullFace = func(mode uint32) {}
	// carbon.DebugMessageCallback = func(callback DebugProc, userParam unsafe.Pointer) {}
	// carbon.DebugMessageCallbackARB = func(callback DebugProc, userParam unsafe.Pointer) {}
	// carbon.DebugMessageCallbackKHR = func(callback DebugProc, userParam unsafe.Pointer) {}
	carbon.DebugMessageControl = func(source uint32, xtype uint32, severity uint32, count int32, ids *uint32, enabled bool) {}
	carbon.DebugMessageControlARB = func(source uint32, xtype uint32, severity uint32, count int32, ids *uint32, enabled bool) {}
	carbon.DebugMessageControlKHR = func(source uint32, xtype uint32, severity uint32, count int32, ids *uint32, enabled bool) {}
	carbon.DebugMessageInsert = func(source uint32, xtype uint32, id uint32, severity uint32, length int32, buf *uint8) {}
	carbon.DebugMessageInsertARB = func(source uint32, xtype uint32, id uint32, severity uint32, length int32, buf *uint8) {}
	carbon.DebugMessageInsertKHR = func(source uint32, xtype uint32, id uint32, severity uint32, length int32, buf *uint8) {}
	carbon.DeleteBuffers = func(n int32, buffers *uint32) {}
	carbon.DeleteCommandListsNV = func(n int32, lists *uint32) {}
	carbon.DeleteFramebuffers = func(n int32, framebuffers *uint32) {}
	carbon.DeleteLists = func(list uint32, xrange int32) {}
	carbon.DeleteNamedStringARB = func(namelen int32, name *uint8) {}
	carbon.DeletePathsNV = func(path uint32, xrange int32) {}
	carbon.DeletePerfMonitorsAMD = func(n int32, monitors *uint32) {}
	carbon.DeletePerfQueryINTEL = func(queryHandle uint32) {}
	carbon.DeleteProgram = func(program uint32) {}
	carbon.DeleteProgramPipelines = func(n int32, pipelines *uint32) {}
	carbon.DeleteProgramPipelinesEXT = func(n int32, pipelines *uint32) {}
	carbon.DeleteQueries = func(n int32, ids *uint32) {}
	carbon.DeleteRenderbuffers = func(n int32, renderbuffers *uint32) {}
	carbon.DeleteSamplers = func(count int32, samplers *uint32) {}
	carbon.DeleteShader = func(shader uint32) {}
	carbon.DeleteStatesNV = func(n int32, states *uint32) {}
	carbon.DeleteSync = func(sync uintptr) {}
	carbon.DeleteTextures = func(n int32, textures *uint32) {}
	carbon.DeleteTransformFeedbacks = func(n int32, ids *uint32) {}
	carbon.DeleteVertexArrays = func(n int32, arrays *uint32) {}
	carbon.DepthFunc = func(xfunc uint32) {}
	carbon.DepthMask = func(flag bool) {}
	carbon.DepthRange = func(n float64, f float64) {}
	carbon.DepthRangeArrayv = func(first uint32, count int32, v *float64) {}
	carbon.DepthRangeIndexed = func(index uint32, n float64, f float64) {}
	carbon.DepthRangef = func(n float32, f float32) {}
	carbon.DetachShader = func(program uint32, shader uint32) {}
	carbon.Disable = func(cap uint32) {}
	carbon.DisableClientState = func(array uint32) {}
	carbon.DisableClientStateIndexedEXT = func(array uint32, index uint32) {}
	carbon.DisableClientStateiEXT = func(array uint32, index uint32) {}
	carbon.DisableIndexedEXT = func(target uint32, index uint32) {}
	carbon.DisableVertexArrayAttrib = func(vaobj uint32, index uint32) {}
	carbon.DisableVertexArrayAttribEXT = func(vaobj uint32, index uint32) {}
	carbon.DisableVertexArrayEXT = func(vaobj uint32, array uint32) {}
	carbon.DisableVertexAttribArray = func(index uint32) {}
	carbon.Disablei = func(target uint32, index uint32) {}
	carbon.DispatchCompute = func(num_groups_x uint32, num_groups_y uint32, num_groups_z uint32) {}
	carbon.DispatchComputeGroupSizeARB = func(num_groups_x uint32, num_groups_y uint32, num_groups_z uint32, group_size_x uint32, group_size_y uint32, group_size_z uint32) {
	}
	carbon.DispatchComputeIndirect = func(indirect int) {}
	carbon.DrawArrays = func(mode uint32, first int32, count int32) {}
	carbon.DrawArraysIndirect = func(mode uint32, indirect unsafe.Pointer) {}
	carbon.DrawArraysInstanced = func(mode uint32, first int32, count int32, instancecount int32) {}
	carbon.DrawArraysInstancedARB = func(mode uint32, first int32, count int32, primcount int32) {}
	carbon.DrawArraysInstancedBaseInstance = func(mode uint32, first int32, count int32, instancecount int32, baseinstance uint32) {}
	carbon.DrawArraysInstancedEXT = func(mode uint32, start int32, count int32, primcount int32) {}
	carbon.DrawBuffer = func(buf uint32) {}
	carbon.DrawBuffers = func(n int32, bufs *uint32) {}
	carbon.DrawCommandsAddressNV = func(primitiveMode uint32, indirects *uint64, sizes *int32, count uint32) {}
	carbon.DrawCommandsNV = func(primitiveMode uint32, buffer uint32, indirects *int, sizes *int32, count uint32) {}
	carbon.DrawCommandsStatesAddressNV = func(indirects *uint64, sizes *int32, states *uint32, fbos *uint32, count uint32) {}
	carbon.DrawCommandsStatesNV = func(buffer uint32, indirects *int, sizes *int32, states *uint32, fbos *uint32, count uint32) {}
	carbon.DrawElements = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer) {}
	carbon.DrawElementsBaseVertex = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, basevertex int32) {}
	carbon.DrawElementsIndirect = func(mode uint32, xtype uint32, indirect unsafe.Pointer) {}
	carbon.DrawElementsInstanced = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, instancecount int32) {}
	carbon.DrawElementsInstancedARB = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, primcount int32) {}
	carbon.DrawElementsInstancedBaseInstance = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, instancecount int32, baseinstance uint32) {
	}
	carbon.DrawElementsInstancedBaseVertex = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, instancecount int32, basevertex int32) {
	}
	carbon.DrawElementsInstancedBaseVertexBaseInstance = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, instancecount int32, basevertex int32, baseinstance uint32) {
	}
	carbon.DrawElementsInstancedEXT = func(mode uint32, count int32, xtype uint32, indices unsafe.Pointer, primcount int32) {}
	carbon.DrawPixels = func(width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {}
	carbon.DrawRangeElements = func(mode uint32, start uint32, end uint32, count int32, xtype uint32, indices unsafe.Pointer) {}
	carbon.DrawRangeElementsBaseVertex = func(mode uint32, start uint32, end uint32, count int32, xtype uint32, indices unsafe.Pointer, basevertex int32) {
	}
	carbon.DrawTransformFeedback = func(mode uint32, id uint32) {}
	carbon.DrawTransformFeedbackInstanced = func(mode uint32, id uint32, instancecount int32) {}
	carbon.DrawTransformFeedbackStream = func(mode uint32, id uint32, stream uint32) {}
	carbon.DrawTransformFeedbackStreamInstanced = func(mode uint32, id uint32, stream uint32, instancecount int32) {}
	carbon.DrawVkImageNV = func(vkImage uint64, sampler uint32, x0 float32, y0 float32, x1 float32, y1 float32, z float32, s0 float32, t0 float32, s1 float32, t1 float32) {
	}
	carbon.EGLImageTargetTexStorageEXT = func(target uint32, image unsafe.Pointer, attrib_list *int32) {}
	carbon.EGLImageTargetTextureStorageEXT = func(texture uint32, image unsafe.Pointer, attrib_list *int32) {}
	carbon.EdgeFlag = func(flag bool) {}
	carbon.EdgeFlagFormatNV = func(stride int32) {}
	carbon.EdgeFlagPointer = func(stride int32, pointer unsafe.Pointer) {}
	carbon.EdgeFlagv = func(flag *bool) {}
	carbon.Enable = func(cap uint32) {}
	carbon.EnableClientState = func(array uint32) {}
	carbon.EnableClientStateIndexedEXT = func(array uint32, index uint32) {}
	carbon.EnableClientStateiEXT = func(array uint32, index uint32) {}
	carbon.EnableIndexedEXT = func(target uint32, index uint32) {}
	carbon.EnableVertexArrayAttrib = func(vaobj uint32, index uint32) {}
	carbon.EnableVertexArrayAttribEXT = func(vaobj uint32, index uint32) {}
	carbon.EnableVertexArrayEXT = func(vaobj uint32, array uint32) {}
	carbon.EnableVertexAttribArray = func(index uint32) {}
	carbon.Enablei = func(target uint32, index uint32) {}
	carbon.End = func() {}
	carbon.EndConditionalRender = func() {}
	carbon.EndConditionalRenderNV = func() {}
	carbon.EndList = func() {}
	carbon.EndPerfMonitorAMD = func(monitor uint32) {}
	carbon.EndPerfQueryINTEL = func(queryHandle uint32) {}
	carbon.EndQuery = func(target uint32) {}
	carbon.EndQueryIndexed = func(target uint32, index uint32) {}
	carbon.EndTransformFeedback = func() {}
	carbon.EvalCoord1d = func(u float64) {}
	carbon.EvalCoord1dv = func(u *float64) {}
	carbon.EvalCoord1f = func(u float32) {}
	carbon.EvalCoord1fv = func(u *float32) {}
	carbon.EvalCoord2d = func(u float64, v float64) {}
	carbon.EvalCoord2dv = func(u *float64) {}
	carbon.EvalCoord2f = func(u float32, v float32) {}
	carbon.EvalCoord2fv = func(u *float32) {}
	carbon.EvalMesh1 = func(mode uint32, i1 int32, i2 int32) {}
	carbon.EvalMesh2 = func(mode uint32, i1 int32, i2 int32, j1 int32, j2 int32) {}
	carbon.EvalPoint1 = func(i int32) {}
	carbon.EvalPoint2 = func(i int32, j int32) {}
	carbon.EvaluateDepthValuesARB = func() {}
	carbon.FeedbackBuffer = func(size int32, xtype uint32, buffer *float32) {}
	carbon.FenceSync = func(condition uint32, flags uint32) uintptr { return 0 }
	carbon.Finish = func() {}
	carbon.Flush = func() {}
	carbon.FlushMappedBufferRange = func(target uint32, offset int, length int) {}
	carbon.FlushMappedNamedBufferRange = func(buffer uint32, offset int, length int) {}
	carbon.FlushMappedNamedBufferRangeEXT = func(buffer uint32, offset int, length int) {}
	carbon.FogCoordFormatNV = func(xtype uint32, stride int32) {}
	carbon.FogCoordPointer = func(xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.FogCoordd = func(coord float64) {}
	carbon.FogCoorddv = func(coord *float64) {}
	carbon.FogCoordf = func(coord float32) {}
	carbon.FogCoordfv = func(coord *float32) {}
	carbon.Fogf = func(pname uint32, param float32) {}
	carbon.Fogfv = func(pname uint32, params *float32) {}
	carbon.Fogi = func(pname uint32, param int32) {}
	carbon.Fogiv = func(pname uint32, params *int32) {}
	carbon.FragmentCoverageColorNV = func(color uint32) {}
	carbon.FramebufferDrawBufferEXT = func(framebuffer uint32, mode uint32) {}
	carbon.FramebufferDrawBuffersEXT = func(framebuffer uint32, n int32, bufs *uint32) {}
	carbon.FramebufferFetchBarrierEXT = func() {}
	carbon.FramebufferParameteri = func(target uint32, pname uint32, param int32) {}
	carbon.FramebufferReadBufferEXT = func(framebuffer uint32, mode uint32) {}
	carbon.FramebufferRenderbuffer = func(target uint32, attachment uint32, renderbuffertarget uint32, renderbuffer uint32) {}
	carbon.FramebufferSampleLocationsfvARB = func(target uint32, start uint32, count int32, v *float32) {}
	carbon.FramebufferSampleLocationsfvNV = func(target uint32, start uint32, count int32, v *float32) {}
	carbon.FramebufferTexture = func(target uint32, attachment uint32, texture uint32, level int32) {}
	carbon.FramebufferTexture1D = func(target uint32, attachment uint32, textarget uint32, texture uint32, level int32) {}
	carbon.FramebufferTexture2D = func(target uint32, attachment uint32, textarget uint32, texture uint32, level int32) {}
	carbon.FramebufferTexture3D = func(target uint32, attachment uint32, textarget uint32, texture uint32, level int32, zoffset int32) {}
	carbon.FramebufferTextureARB = func(target uint32, attachment uint32, texture uint32, level int32) {}
	carbon.FramebufferTextureFaceARB = func(target uint32, attachment uint32, texture uint32, level int32, face uint32) {}
	carbon.FramebufferTextureLayer = func(target uint32, attachment uint32, texture uint32, level int32, layer int32) {}
	carbon.FramebufferTextureLayerARB = func(target uint32, attachment uint32, texture uint32, level int32, layer int32) {}
	carbon.FramebufferTextureMultiviewOVR = func(target uint32, attachment uint32, texture uint32, level int32, baseViewIndex int32, numViews int32) {
	}
	carbon.FrontFace = func(mode uint32) {}
	carbon.Frustum = func(left float64, right float64, bottom float64, top float64, zNear float64, zFar float64) {}
	carbon.GenBuffers = func(n int32, buffers *uint32) {}
	carbon.GenFramebuffers = func(n int32, framebuffers *uint32) {}
	carbon.GenLists = func(xrange int32) uint32 { return 0 }
	carbon.GenPathsNV = func(xrange int32) uint32 { return 0 }
	carbon.GenPerfMonitorsAMD = func(n int32, monitors *uint32) {}
	carbon.GenProgramPipelines = func(n int32, pipelines *uint32) {}
	carbon.GenProgramPipelinesEXT = func(n int32, pipelines *uint32) {}
	carbon.GenQueries = func(n int32, ids *uint32) {}
	carbon.GenRenderbuffers = func(n int32, renderbuffers *uint32) {}
	carbon.GenSamplers = func(count int32, samplers *uint32) {}
	carbon.GenTextures = func(n int32, textures *uint32) {}
	carbon.GenTransformFeedbacks = func(n int32, ids *uint32) {}
	carbon.GenVertexArrays = func(n int32, arrays *uint32) {}
	carbon.GenerateMipmap = func(target uint32) {}
	carbon.GenerateMultiTexMipmapEXT = func(texunit uint32, target uint32) {}
	carbon.GenerateTextureMipmap = func(texture uint32) {}
	carbon.GenerateTextureMipmapEXT = func(texture uint32, target uint32) {}
	carbon.GetActiveAtomicCounterBufferiv = func(program uint32, bufferIndex uint32, pname uint32, params *int32) {}
	carbon.GetActiveAttrib = func(program uint32, index uint32, bufSize int32, length *int32, size *int32, xtype *uint32, name *uint8) {
	}
	carbon.GetActiveSubroutineName = func(program uint32, shadertype uint32, index uint32, bufsize int32, length *int32, name *uint8) {}
	carbon.GetActiveSubroutineUniformName = func(program uint32, shadertype uint32, index uint32, bufsize int32, length *int32, name *uint8) {}
	carbon.GetActiveSubroutineUniformiv = func(program uint32, shadertype uint32, index uint32, pname uint32, values *int32) {}
	carbon.GetActiveUniform = func(program uint32, index uint32, bufSize int32, length *int32, size *int32, xtype *uint32, name *uint8) {
	}
	carbon.GetActiveUniformBlockName = func(program uint32, uniformBlockIndex uint32, bufSize int32, length *int32, uniformBlockName *uint8) {
	}
	carbon.GetActiveUniformBlockiv = func(program uint32, uniformBlockIndex uint32, pname uint32, params *int32) {}
	carbon.GetActiveUniformName = func(program uint32, uniformIndex uint32, bufSize int32, length *int32, uniformName *uint8) {}
	carbon.GetActiveUniformsiv = func(program uint32, uniformCount int32, uniformIndices *uint32, pname uint32, params *int32) {}
	carbon.GetAttachedShaders = func(program uint32, maxCount int32, count *int32, shaders *uint32) {}
	carbon.GetAttribLocation = func(program uint32, name *uint8) int32 { return 0 }
	carbon.GetBooleanIndexedvEXT = func(target uint32, index uint32, data *bool) {}
	carbon.GetBooleani_v = func(target uint32, index uint32, data *bool) {}
	carbon.GetBooleanv = func(pname uint32, data *bool) {}
	carbon.GetBufferParameteri64v = func(target uint32, pname uint32, params *int64) {}
	carbon.GetBufferParameteriv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetBufferParameterui64vNV = func(target uint32, pname uint32, params *uint64) {}
	carbon.GetBufferPointerv = func(target uint32, pname uint32, params *unsafe.Pointer) {}
	carbon.GetBufferSubData = func(target uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.GetClipPlane = func(plane uint32, equation *float64) {}
	carbon.GetCommandHeaderNV = func(tokenID uint32, size uint32) uint32 { return 0 }
	carbon.GetCompressedMultiTexImageEXT = func(texunit uint32, target uint32, lod int32, img unsafe.Pointer) {}
	carbon.GetCompressedTexImage = func(target uint32, level int32, img unsafe.Pointer) {}
	carbon.GetCompressedTextureImage = func(texture uint32, level int32, bufSize int32, pixels unsafe.Pointer) {}
	carbon.GetCompressedTextureImageEXT = func(texture uint32, target uint32, lod int32, img unsafe.Pointer) {}
	carbon.GetCompressedTextureSubImage = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, bufSize int32, pixels unsafe.Pointer) {
	}
	carbon.GetCoverageModulationTableNV = func(bufsize int32, v *float32) {}
	carbon.GetDebugMessageLog = func(count uint32, bufSize int32, sources *uint32, types *uint32, ids *uint32, severities *uint32, lengths *int32, messageLog *uint8) uint32 {
		return 0
	}
	carbon.GetDebugMessageLogARB = func(count uint32, bufSize int32, sources *uint32, types *uint32, ids *uint32, severities *uint32, lengths *int32, messageLog *uint8) uint32 {
		return 0
	}
	carbon.GetDebugMessageLogKHR = func(count uint32, bufSize int32, sources *uint32, types *uint32, ids *uint32, severities *uint32, lengths *int32, messageLog *uint8) uint32 {
		return 0
	}
	carbon.GetDoubleIndexedvEXT = func(target uint32, index uint32, data *float64) {}
	carbon.GetDoublei_v = func(target uint32, index uint32, data *float64) {}
	carbon.GetDoublei_vEXT = func(pname uint32, index uint32, params *float64) {}
	carbon.GetDoublev = func(pname uint32, data *float64) {}
	carbon.GetError = func() uint32 { return 0 }
	carbon.GetFirstPerfQueryIdINTEL = func(queryId *uint32) {}
	carbon.GetFloatIndexedvEXT = func(target uint32, index uint32, data *float32) {}
	carbon.GetFloati_v = func(target uint32, index uint32, data *float32) {}
	carbon.GetFloati_vEXT = func(pname uint32, index uint32, params *float32) {}
	carbon.GetFloatv = func(pname uint32, data *float32) {}
	carbon.GetFragDataIndex = func(program uint32, name *uint8) int32 { return 0 }
	carbon.GetFragDataLocation = func(program uint32, name *uint8) int32 { return 0 }
	carbon.GetFramebufferAttachmentParameteriv = func(target uint32, attachment uint32, pname uint32, params *int32) {}
	carbon.GetFramebufferParameteriv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetFramebufferParameterivEXT = func(framebuffer uint32, pname uint32, params *int32) {}
	carbon.GetGraphicsResetStatus = func() uint32 { return 0 }
	carbon.GetGraphicsResetStatusARB = func() uint32 { return 0 }
	carbon.GetGraphicsResetStatusKHR = func() uint32 { return 0 }
	carbon.GetImageHandleARB = func(texture uint32, level int32, layered bool, layer int32, format uint32) uint64 { return 0 }
	carbon.GetImageHandleNV = func(texture uint32, level int32, layered bool, layer int32, format uint32) uint64 { return 0 }
	carbon.GetInteger64i_v = func(target uint32, index uint32, data *int64) {}
	carbon.GetInteger64v = func(pname uint32, data *int64) {}
	carbon.GetIntegerIndexedvEXT = func(target uint32, index uint32, data *int32) {}
	carbon.GetIntegeri_v = func(target uint32, index uint32, data *int32) {}
	carbon.GetIntegerui64i_vNV = func(value uint32, index uint32, result *uint64) {}
	carbon.GetIntegerui64vNV = func(value uint32, result *uint64) {}
	carbon.GetIntegerv = func(pname uint32, data *int32) {}
	carbon.GetInternalformatSampleivNV = func(target uint32, internalformat uint32, samples int32, pname uint32, bufSize int32, params *int32) {
	}
	carbon.GetInternalformati64v = func(target uint32, internalformat uint32, pname uint32, bufSize int32, params *int64) {}
	carbon.GetInternalformativ = func(target uint32, internalformat uint32, pname uint32, bufSize int32, params *int32) {}
	carbon.GetLightfv = func(light uint32, pname uint32, params *float32) {}
	carbon.GetLightiv = func(light uint32, pname uint32, params *int32) {}
	carbon.GetMapdv = func(target uint32, query uint32, v *float64) {}
	carbon.GetMapfv = func(target uint32, query uint32, v *float32) {}
	carbon.GetMapiv = func(target uint32, query uint32, v *int32) {}
	carbon.GetMaterialfv = func(face uint32, pname uint32, params *float32) {}
	carbon.GetMaterialiv = func(face uint32, pname uint32, params *int32) {}
	carbon.GetMultiTexEnvfvEXT = func(texunit uint32, target uint32, pname uint32, params *float32) {}
	carbon.GetMultiTexEnvivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetMultiTexGendvEXT = func(texunit uint32, coord uint32, pname uint32, params *float64) {}
	carbon.GetMultiTexGenfvEXT = func(texunit uint32, coord uint32, pname uint32, params *float32) {}
	carbon.GetMultiTexGenivEXT = func(texunit uint32, coord uint32, pname uint32, params *int32) {}
	carbon.GetMultiTexImageEXT = func(texunit uint32, target uint32, level int32, format uint32, xtype uint32, pixels unsafe.Pointer) {}
	carbon.GetMultiTexLevelParameterfvEXT = func(texunit uint32, target uint32, level int32, pname uint32, params *float32) {}
	carbon.GetMultiTexLevelParameterivEXT = func(texunit uint32, target uint32, level int32, pname uint32, params *int32) {}
	carbon.GetMultiTexParameterIivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetMultiTexParameterIuivEXT = func(texunit uint32, target uint32, pname uint32, params *uint32) {}
	carbon.GetMultiTexParameterfvEXT = func(texunit uint32, target uint32, pname uint32, params *float32) {}
	carbon.GetMultiTexParameterivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetMultisamplefv = func(pname uint32, index uint32, val *float32) {}
	carbon.GetNamedBufferParameteri64v = func(buffer uint32, pname uint32, params *int64) {}
	carbon.GetNamedBufferParameteriv = func(buffer uint32, pname uint32, params *int32) {}
	carbon.GetNamedBufferParameterivEXT = func(buffer uint32, pname uint32, params *int32) {}
	carbon.GetNamedBufferParameterui64vNV = func(buffer uint32, pname uint32, params *uint64) {}
	carbon.GetNamedBufferPointerv = func(buffer uint32, pname uint32, params *unsafe.Pointer) {}
	carbon.GetNamedBufferPointervEXT = func(buffer uint32, pname uint32, params *unsafe.Pointer) {}
	carbon.GetNamedBufferSubData = func(buffer uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.GetNamedBufferSubDataEXT = func(buffer uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.GetNamedFramebufferAttachmentParameteriv = func(framebuffer uint32, attachment uint32, pname uint32, params *int32) {}
	carbon.GetNamedFramebufferAttachmentParameterivEXT = func(framebuffer uint32, attachment uint32, pname uint32, params *int32) {}
	carbon.GetNamedFramebufferParameteriv = func(framebuffer uint32, pname uint32, param *int32) {}
	carbon.GetNamedFramebufferParameterivEXT = func(framebuffer uint32, pname uint32, params *int32) {}
	carbon.GetNamedProgramLocalParameterIivEXT = func(program uint32, target uint32, index uint32, params *int32) {}
	carbon.GetNamedProgramLocalParameterIuivEXT = func(program uint32, target uint32, index uint32, params *uint32) {}
	carbon.GetNamedProgramLocalParameterdvEXT = func(program uint32, target uint32, index uint32, params *float64) {}
	carbon.GetNamedProgramLocalParameterfvEXT = func(program uint32, target uint32, index uint32, params *float32) {}
	carbon.GetNamedProgramStringEXT = func(program uint32, target uint32, pname uint32, xstring unsafe.Pointer) {}
	carbon.GetNamedProgramivEXT = func(program uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetNamedRenderbufferParameteriv = func(renderbuffer uint32, pname uint32, params *int32) {}
	carbon.GetNamedRenderbufferParameterivEXT = func(renderbuffer uint32, pname uint32, params *int32) {}
	carbon.GetNamedStringARB = func(namelen int32, name *uint8, bufSize int32, stringlen *int32, xstring *uint8) {}
	carbon.GetNamedStringivARB = func(namelen int32, name *uint8, pname uint32, params *int32) {}
	carbon.GetNextPerfQueryIdINTEL = func(queryId uint32, nextQueryId *uint32) {}
	carbon.GetObjectLabel = func(identifier uint32, name uint32, bufSize int32, length *int32, label *uint8) {}
	carbon.GetObjectLabelEXT = func(xtype uint32, object uint32, bufSize int32, length *int32, label *uint8) {}
	carbon.GetObjectLabelKHR = func(identifier uint32, name uint32, bufSize int32, length *int32, label *uint8) {}
	carbon.GetObjectPtrLabel = func(ptr unsafe.Pointer, bufSize int32, length *int32, label *uint8) {}
	carbon.GetObjectPtrLabelKHR = func(ptr unsafe.Pointer, bufSize int32, length *int32, label *uint8) {}
	carbon.GetPathCommandsNV = func(path uint32, commands *uint8) {}
	carbon.GetPathCoordsNV = func(path uint32, coords *float32) {}
	carbon.GetPathDashArrayNV = func(path uint32, dashArray *float32) {}
	carbon.GetPathLengthNV = func(path uint32, startSegment int32, numSegments int32) float32 { return 0 }
	carbon.GetPathMetricRangeNV = func(metricQueryMask uint32, firstPathName uint32, numPaths int32, stride int32, metrics *float32) {}
	carbon.GetPathMetricsNV = func(metricQueryMask uint32, numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, stride int32, metrics *float32) {
	}
	carbon.GetPathParameterfvNV = func(path uint32, pname uint32, value *float32) {}
	carbon.GetPathParameterivNV = func(path uint32, pname uint32, value *int32) {}
	carbon.GetPathSpacingNV = func(pathListMode uint32, numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, advanceScale float32, kerningScale float32, transformType uint32, returnedSpacing *float32) {
	}
	carbon.GetPerfCounterInfoINTEL = func(queryId uint32, counterId uint32, counterNameLength uint32, counterName *uint8, counterDescLength uint32, counterDesc *uint8, counterOffset *uint32, counterDataSize *uint32, counterTypeEnum *uint32, counterDataTypeEnum *uint32, rawCounterMaxValue *uint64) {
	}
	carbon.GetPerfMonitorCounterDataAMD = func(monitor uint32, pname uint32, dataSize int32, data *uint32, bytesWritten *int32) {}
	carbon.GetPerfMonitorCounterInfoAMD = func(group uint32, counter uint32, pname uint32, data unsafe.Pointer) {}
	carbon.GetPerfMonitorCounterStringAMD = func(group uint32, counter uint32, bufSize int32, length *int32, counterString *uint8) {}
	carbon.GetPerfMonitorCountersAMD = func(group uint32, numCounters *int32, maxActiveCounters *int32, counterSize int32, counters *uint32) {
	}
	carbon.GetPerfMonitorGroupStringAMD = func(group uint32, bufSize int32, length *int32, groupString *uint8) {}
	carbon.GetPerfMonitorGroupsAMD = func(numGroups *int32, groupsSize int32, groups *uint32) {}
	carbon.GetPerfQueryDataINTEL = func(queryHandle uint32, flags uint32, dataSize int32, data unsafe.Pointer, bytesWritten *uint32) {}
	carbon.GetPerfQueryIdByNameINTEL = func(queryName *uint8, queryId *uint32) {}
	carbon.GetPerfQueryInfoINTEL = func(queryId uint32, queryNameLength uint32, queryName *uint8, dataSize *uint32, noCounters *uint32, noInstances *uint32, capsMask *uint32) {
	}
	carbon.GetPixelMapfv = func(xmap uint32, values *float32) {}
	carbon.GetPixelMapuiv = func(xmap uint32, values *uint32) {}
	carbon.GetPixelMapusv = func(xmap uint32, values *uint16) {}
	carbon.GetPointerIndexedvEXT = func(target uint32, index uint32, data *unsafe.Pointer) {}
	carbon.GetPointeri_vEXT = func(pname uint32, index uint32, params *unsafe.Pointer) {}
	carbon.GetPointerv = func(pname uint32, params *unsafe.Pointer) {}
	carbon.GetPointervKHR = func(pname uint32, params *unsafe.Pointer) {}
	carbon.GetPolygonStipple = func(mask *uint8) {}
	carbon.GetProgramBinary = func(program uint32, bufSize int32, length *int32, binaryFormat *uint32, binary unsafe.Pointer) {}
	carbon.GetProgramInfoLog = func(program uint32, bufSize int32, length *int32, infoLog *uint8) {}
	carbon.GetProgramInterfaceiv = func(program uint32, programInterface uint32, pname uint32, params *int32) {}
	carbon.GetProgramPipelineInfoLog = func(pipeline uint32, bufSize int32, length *int32, infoLog *uint8) {}
	carbon.GetProgramPipelineInfoLogEXT = func(pipeline uint32, bufSize int32, length *int32, infoLog *uint8) {}
	carbon.GetProgramPipelineiv = func(pipeline uint32, pname uint32, params *int32) {}
	carbon.GetProgramPipelineivEXT = func(pipeline uint32, pname uint32, params *int32) {}
	carbon.GetProgramResourceIndex = func(program uint32, programInterface uint32, name *uint8) uint32 { return 0 }
	carbon.GetProgramResourceLocation = func(program uint32, programInterface uint32, name *uint8) int32 { return 0 }
	carbon.GetProgramResourceLocationIndex = func(program uint32, programInterface uint32, name *uint8) int32 { return 0 }
	carbon.GetProgramResourceName = func(program uint32, programInterface uint32, index uint32, bufSize int32, length *int32, name *uint8) {
	}
	carbon.GetProgramResourcefvNV = func(program uint32, programInterface uint32, index uint32, propCount int32, props *uint32, bufSize int32, length *int32, params *float32) {
	}
	carbon.GetProgramResourceiv = func(program uint32, programInterface uint32, index uint32, propCount int32, props *uint32, bufSize int32, length *int32, params *int32) {
	}
	carbon.GetProgramStageiv = func(program uint32, shadertype uint32, pname uint32, values *int32) {}
	carbon.GetProgramiv = func(program uint32, pname uint32, params *int32) {}
	carbon.GetQueryBufferObjecti64v = func(id uint32, buffer uint32, pname uint32, offset int) {}
	carbon.GetQueryBufferObjectiv = func(id uint32, buffer uint32, pname uint32, offset int) {}
	carbon.GetQueryBufferObjectui64v = func(id uint32, buffer uint32, pname uint32, offset int) {}
	carbon.GetQueryBufferObjectuiv = func(id uint32, buffer uint32, pname uint32, offset int) {}
	carbon.GetQueryIndexediv = func(target uint32, index uint32, pname uint32, params *int32) {}
	carbon.GetQueryObjecti64v = func(id uint32, pname uint32, params *int64) {}
	carbon.GetQueryObjectiv = func(id uint32, pname uint32, params *int32) {}
	carbon.GetQueryObjectui64v = func(id uint32, pname uint32, params *uint64) {}
	carbon.GetQueryObjectuiv = func(id uint32, pname uint32, params *uint32) {}
	carbon.GetQueryiv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetRenderbufferParameteriv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetSamplerParameterIiv = func(sampler uint32, pname uint32, params *int32) {}
	carbon.GetSamplerParameterIuiv = func(sampler uint32, pname uint32, params *uint32) {}
	carbon.GetSamplerParameterfv = func(sampler uint32, pname uint32, params *float32) {}
	carbon.GetSamplerParameteriv = func(sampler uint32, pname uint32, params *int32) {}
	carbon.GetShaderInfoLog = func(shader uint32, bufSize int32, length *int32, infoLog *uint8) {}
	carbon.GetShaderPrecisionFormat = func(shadertype uint32, precisiontype uint32, xrange *int32, precision *int32) {}
	carbon.GetShaderSource = func(shader uint32, bufSize int32, length *int32, source *uint8) {}
	carbon.GetShaderiv = func(shader uint32, pname uint32, params *int32) {}
	carbon.GetStageIndexNV = func(shadertype uint32) uint16 { return 0 }
	carbon.GetString = func(name uint32) *uint8 { return nil }
	carbon.GetStringi = func(name uint32, index uint32) *uint8 { return nil }
	carbon.GetSubroutineIndex = func(program uint32, shadertype uint32, name *uint8) uint32 { return 0 }
	carbon.GetSubroutineUniformLocation = func(program uint32, shadertype uint32, name *uint8) int32 { return 0 }
	carbon.GetSynciv = func(sync uintptr, pname uint32, bufSize int32, length *int32, values *int32) {}
	carbon.GetTexEnvfv = func(target uint32, pname uint32, params *float32) {}
	carbon.GetTexEnviv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetTexGendv = func(coord uint32, pname uint32, params *float64) {}
	carbon.GetTexGenfv = func(coord uint32, pname uint32, params *float32) {}
	carbon.GetTexGeniv = func(coord uint32, pname uint32, params *int32) {}
	carbon.GetTexImage = func(target uint32, level int32, format uint32, xtype uint32, pixels unsafe.Pointer) {}
	carbon.GetTexLevelParameterfv = func(target uint32, level int32, pname uint32, params *float32) {}
	carbon.GetTexLevelParameteriv = func(target uint32, level int32, pname uint32, params *int32) {}
	carbon.GetTexParameterIiv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetTexParameterIuiv = func(target uint32, pname uint32, params *uint32) {}
	carbon.GetTexParameterfv = func(target uint32, pname uint32, params *float32) {}
	carbon.GetTexParameteriv = func(target uint32, pname uint32, params *int32) {}
	carbon.GetTextureHandleARB = func(texture uint32) uint64 { return 0 }
	carbon.GetTextureHandleNV = func(texture uint32) uint64 { return 0 }
	carbon.GetTextureImage = func(texture uint32, level int32, format uint32, xtype uint32, bufSize int32, pixels unsafe.Pointer) {}
	carbon.GetTextureImageEXT = func(texture uint32, target uint32, level int32, format uint32, xtype uint32, pixels unsafe.Pointer) {}
	carbon.GetTextureLevelParameterfv = func(texture uint32, level int32, pname uint32, params *float32) {}
	carbon.GetTextureLevelParameterfvEXT = func(texture uint32, target uint32, level int32, pname uint32, params *float32) {}
	carbon.GetTextureLevelParameteriv = func(texture uint32, level int32, pname uint32, params *int32) {}
	carbon.GetTextureLevelParameterivEXT = func(texture uint32, target uint32, level int32, pname uint32, params *int32) {}
	carbon.GetTextureParameterIiv = func(texture uint32, pname uint32, params *int32) {}
	carbon.GetTextureParameterIivEXT = func(texture uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetTextureParameterIuiv = func(texture uint32, pname uint32, params *uint32) {}
	carbon.GetTextureParameterIuivEXT = func(texture uint32, target uint32, pname uint32, params *uint32) {}
	carbon.GetTextureParameterfv = func(texture uint32, pname uint32, params *float32) {}
	carbon.GetTextureParameterfvEXT = func(texture uint32, target uint32, pname uint32, params *float32) {}
	carbon.GetTextureParameteriv = func(texture uint32, pname uint32, params *int32) {}
	carbon.GetTextureParameterivEXT = func(texture uint32, target uint32, pname uint32, params *int32) {}
	carbon.GetTextureSamplerHandleARB = func(texture uint32, sampler uint32) uint64 { return 0 }
	carbon.GetTextureSamplerHandleNV = func(texture uint32, sampler uint32) uint64 { return 0 }
	carbon.GetTextureSubImage = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, bufSize int32, pixels unsafe.Pointer) {
	}
	carbon.GetTransformFeedbackVarying = func(program uint32, index uint32, bufSize int32, length *int32, size *int32, xtype *uint32, name *uint8) {
	}
	carbon.GetTransformFeedbacki64_v = func(xfb uint32, pname uint32, index uint32, param *int64) {}
	carbon.GetTransformFeedbacki_v = func(xfb uint32, pname uint32, index uint32, param *int32) {}
	carbon.GetTransformFeedbackiv = func(xfb uint32, pname uint32, param *int32) {}
	carbon.GetUniformBlockIndex = func(program uint32, uniformBlockName *uint8) uint32 { return 0 }
	carbon.GetUniformIndices = func(program uint32, uniformCount int32, uniformNames **uint8, uniformIndices *uint32) {}
	carbon.GetUniformLocation = func(program uint32, name *uint8) int32 { return 0 }
	carbon.GetUniformSubroutineuiv = func(shadertype uint32, location int32, params *uint32) {}
	carbon.GetUniformdv = func(program uint32, location int32, params *float64) {}
	carbon.GetUniformfv = func(program uint32, location int32, params *float32) {}
	carbon.GetUniformi64vARB = func(program uint32, location int32, params *int64) {}
	carbon.GetUniformi64vNV = func(program uint32, location int32, params *int64) {}
	carbon.GetUniformiv = func(program uint32, location int32, params *int32) {}
	carbon.GetUniformui64vARB = func(program uint32, location int32, params *uint64) {}
	carbon.GetUniformui64vNV = func(program uint32, location int32, params *uint64) {}
	carbon.GetUniformuiv = func(program uint32, location int32, params *uint32) {}
	carbon.GetVertexArrayIndexed64iv = func(vaobj uint32, index uint32, pname uint32, param *int64) {}
	carbon.GetVertexArrayIndexediv = func(vaobj uint32, index uint32, pname uint32, param *int32) {}
	carbon.GetVertexArrayIntegeri_vEXT = func(vaobj uint32, index uint32, pname uint32, param *int32) {}
	carbon.GetVertexArrayIntegervEXT = func(vaobj uint32, pname uint32, param *int32) {}
	carbon.GetVertexArrayPointeri_vEXT = func(vaobj uint32, index uint32, pname uint32, param *unsafe.Pointer) {}
	carbon.GetVertexArrayPointervEXT = func(vaobj uint32, pname uint32, param *unsafe.Pointer) {}
	carbon.GetVertexArrayiv = func(vaobj uint32, pname uint32, param *int32) {}
	carbon.GetVertexAttribIiv = func(index uint32, pname uint32, params *int32) {}
	carbon.GetVertexAttribIuiv = func(index uint32, pname uint32, params *uint32) {}
	carbon.GetVertexAttribLdv = func(index uint32, pname uint32, params *float64) {}
	carbon.GetVertexAttribLi64vNV = func(index uint32, pname uint32, params *int64) {}
	carbon.GetVertexAttribLui64vARB = func(index uint32, pname uint32, params *uint64) {}
	carbon.GetVertexAttribLui64vNV = func(index uint32, pname uint32, params *uint64) {}
	carbon.GetVertexAttribPointerv = func(index uint32, pname uint32, pointer *unsafe.Pointer) {}
	carbon.GetVertexAttribdv = func(index uint32, pname uint32, params *float64) {}
	carbon.GetVertexAttribfv = func(index uint32, pname uint32, params *float32) {}
	carbon.GetVertexAttribiv = func(index uint32, pname uint32, params *int32) {}
	carbon.GetVkProcAddrNV = func(name *uint8) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.GetnCompressedTexImage = func(target uint32, lod int32, bufSize int32, pixels unsafe.Pointer) {}
	carbon.GetnCompressedTexImageARB = func(target uint32, lod int32, bufSize int32, img unsafe.Pointer) {}
	carbon.GetnTexImage = func(target uint32, level int32, format uint32, xtype uint32, bufSize int32, pixels unsafe.Pointer) {}
	carbon.GetnTexImageARB = func(target uint32, level int32, format uint32, xtype uint32, bufSize int32, img unsafe.Pointer) {}
	carbon.GetnUniformdv = func(program uint32, location int32, bufSize int32, params *float64) {}
	carbon.GetnUniformdvARB = func(program uint32, location int32, bufSize int32, params *float64) {}
	carbon.GetnUniformfv = func(program uint32, location int32, bufSize int32, params *float32) {}
	carbon.GetnUniformfvARB = func(program uint32, location int32, bufSize int32, params *float32) {}
	carbon.GetnUniformfvKHR = func(program uint32, location int32, bufSize int32, params *float32) {}
	carbon.GetnUniformi64vARB = func(program uint32, location int32, bufSize int32, params *int64) {}
	carbon.GetnUniformiv = func(program uint32, location int32, bufSize int32, params *int32) {}
	carbon.GetnUniformivARB = func(program uint32, location int32, bufSize int32, params *int32) {}
	carbon.GetnUniformivKHR = func(program uint32, location int32, bufSize int32, params *int32) {}
	carbon.GetnUniformui64vARB = func(program uint32, location int32, bufSize int32, params *uint64) {}
	carbon.GetnUniformuiv = func(program uint32, location int32, bufSize int32, params *uint32) {}
	carbon.GetnUniformuivARB = func(program uint32, location int32, bufSize int32, params *uint32) {}
	carbon.GetnUniformuivKHR = func(program uint32, location int32, bufSize int32, params *uint32) {}
	carbon.Hint = func(target uint32, mode uint32) {}
	carbon.IndexFormatNV = func(xtype uint32, stride int32) {}
	carbon.IndexMask = func(mask uint32) {}
	carbon.IndexPointer = func(xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.Indexd = func(c float64) {}
	carbon.Indexdv = func(c *float64) {}
	carbon.Indexf = func(c float32) {}
	carbon.Indexfv = func(c *float32) {}
	carbon.Indexi = func(c int32) {}
	carbon.Indexiv = func(c *int32) {}
	carbon.Indexs = func(c int16) {}
	carbon.Indexsv = func(c *int16) {}
	carbon.Indexub = func(c uint8) {}
	carbon.Indexubv = func(c *uint8) {}
	carbon.InitNames = func() {}
	carbon.InsertEventMarkerEXT = func(length int32, marker *uint8) {}
	carbon.InterleavedArrays = func(format uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.InterpolatePathsNV = func(resultPath uint32, pathA uint32, pathB uint32, weight float32) {}
	carbon.InvalidateBufferData = func(buffer uint32) {}
	carbon.InvalidateBufferSubData = func(buffer uint32, offset int, length int) {}
	carbon.InvalidateFramebuffer = func(target uint32, numAttachments int32, attachments *uint32) {}
	carbon.InvalidateNamedFramebufferData = func(framebuffer uint32, numAttachments int32, attachments *uint32) {}
	carbon.InvalidateNamedFramebufferSubData = func(framebuffer uint32, numAttachments int32, attachments *uint32, x int32, y int32, width int32, height int32) {
	}
	carbon.InvalidateSubFramebuffer = func(target uint32, numAttachments int32, attachments *uint32, x int32, y int32, width int32, height int32) {
	}
	carbon.InvalidateTexImage = func(texture uint32, level int32) {}
	carbon.InvalidateTexSubImage = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32) {
	}
	carbon.IsBuffer = func(buffer uint32) bool { return false }
	carbon.IsBufferResidentNV = func(target uint32) bool { return false }
	carbon.IsCommandListNV = func(list uint32) bool { return false }
	carbon.IsEnabled = func(cap uint32) bool { return false }
	carbon.IsEnabledIndexedEXT = func(target uint32, index uint32) bool { return false }
	carbon.IsEnabledi = func(target uint32, index uint32) bool { return false }
	carbon.IsFramebuffer = func(framebuffer uint32) bool { return false }
	carbon.IsImageHandleResidentARB = func(handle uint64) bool { return false }
	carbon.IsImageHandleResidentNV = func(handle uint64) bool { return false }
	carbon.IsList = func(list uint32) bool { return false }
	carbon.IsNamedBufferResidentNV = func(buffer uint32) bool { return false }
	carbon.IsNamedStringARB = func(namelen int32, name *uint8) bool { return false }
	carbon.IsPathNV = func(path uint32) bool { return false }
	carbon.IsPointInFillPathNV = func(path uint32, mask uint32, x float32, y float32) bool { return false }
	carbon.IsPointInStrokePathNV = func(path uint32, x float32, y float32) bool { return false }
	carbon.IsProgram = func(program uint32) bool { return false }
	carbon.IsProgramPipeline = func(pipeline uint32) bool { return false }
	carbon.IsProgramPipelineEXT = func(pipeline uint32) bool { return false }
	carbon.IsQuery = func(id uint32) bool { return false }
	carbon.IsRenderbuffer = func(renderbuffer uint32) bool { return false }
	carbon.IsSampler = func(sampler uint32) bool { return false }
	carbon.IsShader = func(shader uint32) bool { return false }
	carbon.IsStateNV = func(state uint32) bool { return false }
	carbon.IsSync = func(sync uintptr) bool { return false }
	carbon.IsTexture = func(texture uint32) bool { return false }
	carbon.IsTextureHandleResidentARB = func(handle uint64) bool { return false }
	carbon.IsTextureHandleResidentNV = func(handle uint64) bool { return false }
	carbon.IsTransformFeedback = func(id uint32) bool { return false }
	carbon.IsVertexArray = func(array uint32) bool { return false }
	carbon.LabelObjectEXT = func(xtype uint32, object uint32, length int32, label *uint8) {}
	carbon.LightModelf = func(pname uint32, param float32) {}
	carbon.LightModelfv = func(pname uint32, params *float32) {}
	carbon.LightModeli = func(pname uint32, param int32) {}
	carbon.LightModeliv = func(pname uint32, params *int32) {}
	carbon.Lightf = func(light uint32, pname uint32, param float32) {}
	carbon.Lightfv = func(light uint32, pname uint32, params *float32) {}
	carbon.Lighti = func(light uint32, pname uint32, param int32) {}
	carbon.Lightiv = func(light uint32, pname uint32, params *int32) {}
	carbon.LineStipple = func(factor int32, pattern uint16) {}
	carbon.LineWidth = func(width float32) {}
	carbon.LinkProgram = func(program uint32) {}
	carbon.ListBase = func(base uint32) {}
	carbon.ListDrawCommandsStatesClientNV = func(list uint32, segment uint32, indirects *unsafe.Pointer, sizes *int32, states *uint32, fbos *uint32, count uint32) {
	}
	carbon.LoadIdentity = func() {}
	carbon.LoadMatrixd = func(m *float64) {}
	carbon.LoadMatrixf = func(m *float32) {}
	carbon.LoadName = func(name uint32) {}
	carbon.LoadTransposeMatrixd = func(m *float64) {}
	carbon.LoadTransposeMatrixf = func(m *float32) {}
	carbon.LogicOp = func(opcode uint32) {}
	carbon.MakeBufferNonResidentNV = func(target uint32) {}
	carbon.MakeBufferResidentNV = func(target uint32, access uint32) {}
	carbon.MakeImageHandleNonResidentARB = func(handle uint64) {}
	carbon.MakeImageHandleNonResidentNV = func(handle uint64) {}
	carbon.MakeImageHandleResidentARB = func(handle uint64, access uint32) {}
	carbon.MakeImageHandleResidentNV = func(handle uint64, access uint32) {}
	carbon.MakeNamedBufferNonResidentNV = func(buffer uint32) {}
	carbon.MakeNamedBufferResidentNV = func(buffer uint32, access uint32) {}
	carbon.MakeTextureHandleNonResidentARB = func(handle uint64) {}
	carbon.MakeTextureHandleNonResidentNV = func(handle uint64) {}
	carbon.MakeTextureHandleResidentARB = func(handle uint64) {}
	carbon.MakeTextureHandleResidentNV = func(handle uint64) {}
	carbon.Map1d = func(target uint32, u1 float64, u2 float64, stride int32, order int32, points *float64) {}
	carbon.Map1f = func(target uint32, u1 float32, u2 float32, stride int32, order int32, points *float32) {}
	carbon.Map2d = func(target uint32, u1 float64, u2 float64, ustride int32, uorder int32, v1 float64, v2 float64, vstride int32, vorder int32, points *float64) {
	}
	carbon.Map2f = func(target uint32, u1 float32, u2 float32, ustride int32, uorder int32, v1 float32, v2 float32, vstride int32, vorder int32, points *float32) {
	}
	carbon.MapBuffer = func(target uint32, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.MapBufferRange = func(target uint32, offset int, length int, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.MapGrid1d = func(un int32, u1 float64, u2 float64) {}
	carbon.MapGrid1f = func(un int32, u1 float32, u2 float32) {}
	carbon.MapGrid2d = func(un int32, u1 float64, u2 float64, vn int32, v1 float64, v2 float64) {}
	carbon.MapGrid2f = func(un int32, u1 float32, u2 float32, vn int32, v1 float32, v2 float32) {}
	carbon.MapNamedBuffer = func(buffer uint32, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.MapNamedBufferEXT = func(buffer uint32, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.MapNamedBufferRange = func(buffer uint32, offset int, length int, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.MapNamedBufferRangeEXT = func(buffer uint32, offset int, length int, access uint32) unsafe.Pointer { return unsafe.Pointer(nil) }
	carbon.Materialf = func(face uint32, pname uint32, param float32) {}
	carbon.Materialfv = func(face uint32, pname uint32, params *float32) {}
	carbon.Materiali = func(face uint32, pname uint32, param int32) {}
	carbon.Materialiv = func(face uint32, pname uint32, params *int32) {}
	carbon.MatrixFrustumEXT = func(mode uint32, left float64, right float64, bottom float64, top float64, zNear float64, zFar float64) {
	}
	carbon.MatrixLoad3x2fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixLoad3x3fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixLoadIdentityEXT = func(mode uint32) {}
	carbon.MatrixLoadTranspose3x3fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixLoadTransposedEXT = func(mode uint32, m *float64) {}
	carbon.MatrixLoadTransposefEXT = func(mode uint32, m *float32) {}
	carbon.MatrixLoaddEXT = func(mode uint32, m *float64) {}
	carbon.MatrixLoadfEXT = func(mode uint32, m *float32) {}
	carbon.MatrixMode = func(mode uint32) {}
	carbon.MatrixMult3x2fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixMult3x3fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixMultTranspose3x3fNV = func(matrixMode uint32, m *float32) {}
	carbon.MatrixMultTransposedEXT = func(mode uint32, m *float64) {}
	carbon.MatrixMultTransposefEXT = func(mode uint32, m *float32) {}
	carbon.MatrixMultdEXT = func(mode uint32, m *float64) {}
	carbon.MatrixMultfEXT = func(mode uint32, m *float32) {}
	carbon.MatrixOrthoEXT = func(mode uint32, left float64, right float64, bottom float64, top float64, zNear float64, zFar float64) {
	}
	carbon.MatrixPopEXT = func(mode uint32) {}
	carbon.MatrixPushEXT = func(mode uint32) {}
	carbon.MatrixRotatedEXT = func(mode uint32, angle float64, x float64, y float64, z float64) {}
	carbon.MatrixRotatefEXT = func(mode uint32, angle float32, x float32, y float32, z float32) {}
	carbon.MatrixScaledEXT = func(mode uint32, x float64, y float64, z float64) {}
	carbon.MatrixScalefEXT = func(mode uint32, x float32, y float32, z float32) {}
	carbon.MatrixTranslatedEXT = func(mode uint32, x float64, y float64, z float64) {}
	carbon.MatrixTranslatefEXT = func(mode uint32, x float32, y float32, z float32) {}
	carbon.MaxShaderCompilerThreadsARB = func(count uint32) {}
	carbon.MaxShaderCompilerThreadsKHR = func(count uint32) {}
	carbon.MemoryBarrier = func(barriers uint32) {}
	carbon.MemoryBarrierByRegion = func(barriers uint32) {}
	carbon.MinSampleShading = func(value float32) {}
	carbon.MinSampleShadingARB = func(value float32) {}
	carbon.MultMatrixd = func(m *float64) {}
	carbon.MultMatrixf = func(m *float32) {}
	carbon.MultTransposeMatrixd = func(m *float64) {}
	carbon.MultTransposeMatrixf = func(m *float32) {}
	carbon.MultiDrawArrays = func(mode uint32, first *int32, count *int32, drawcount int32) {}
	carbon.MultiDrawArraysIndirect = func(mode uint32, indirect unsafe.Pointer, drawcount int32, stride int32) {}
	carbon.MultiDrawArraysIndirectBindlessCountNV = func(mode uint32, indirect unsafe.Pointer, drawCount int32, maxDrawCount int32, stride int32, vertexBufferCount int32) {
	}
	carbon.MultiDrawArraysIndirectBindlessNV = func(mode uint32, indirect unsafe.Pointer, drawCount int32, stride int32, vertexBufferCount int32) {}
	carbon.MultiDrawArraysIndirectCount = func(mode uint32, indirect unsafe.Pointer, drawcount int, maxdrawcount int32, stride int32) {}
	carbon.MultiDrawArraysIndirectCountARB = func(mode uint32, indirect unsafe.Pointer, drawcount int, maxdrawcount int32, stride int32) {}
	carbon.MultiDrawElements = func(mode uint32, count *int32, xtype uint32, indices *unsafe.Pointer, drawcount int32) {}
	carbon.MultiDrawElementsBaseVertex = func(mode uint32, count *int32, xtype uint32, indices *unsafe.Pointer, drawcount int32, basevertex *int32) {
	}
	carbon.MultiDrawElementsIndirect = func(mode uint32, xtype uint32, indirect unsafe.Pointer, drawcount int32, stride int32) {}
	carbon.MultiDrawElementsIndirectBindlessCountNV = func(mode uint32, xtype uint32, indirect unsafe.Pointer, drawCount int32, maxDrawCount int32, stride int32, vertexBufferCount int32) {
	}
	carbon.MultiDrawElementsIndirectBindlessNV = func(mode uint32, xtype uint32, indirect unsafe.Pointer, drawCount int32, stride int32, vertexBufferCount int32) {
	}
	carbon.MultiDrawElementsIndirectCount = func(mode uint32, xtype uint32, indirect unsafe.Pointer, drawcount int, maxdrawcount int32, stride int32) {
	}
	carbon.MultiDrawElementsIndirectCountARB = func(mode uint32, xtype uint32, indirect unsafe.Pointer, drawcount int, maxdrawcount int32, stride int32) {
	}
	carbon.MultiTexBufferEXT = func(texunit uint32, target uint32, internalformat uint32, buffer uint32) {}
	carbon.MultiTexCoord1d = func(target uint32, s float64) {}
	carbon.MultiTexCoord1dv = func(target uint32, v *float64) {}
	carbon.MultiTexCoord1f = func(target uint32, s float32) {}
	carbon.MultiTexCoord1fv = func(target uint32, v *float32) {}
	carbon.MultiTexCoord1i = func(target uint32, s int32) {}
	carbon.MultiTexCoord1iv = func(target uint32, v *int32) {}
	carbon.MultiTexCoord1s = func(target uint32, s int16) {}
	carbon.MultiTexCoord1sv = func(target uint32, v *int16) {}
	carbon.MultiTexCoord2d = func(target uint32, s float64, t float64) {}
	carbon.MultiTexCoord2dv = func(target uint32, v *float64) {}
	carbon.MultiTexCoord2f = func(target uint32, s float32, t float32) {}
	carbon.MultiTexCoord2fv = func(target uint32, v *float32) {}
	carbon.MultiTexCoord2i = func(target uint32, s int32, t int32) {}
	carbon.MultiTexCoord2iv = func(target uint32, v *int32) {}
	carbon.MultiTexCoord2s = func(target uint32, s int16, t int16) {}
	carbon.MultiTexCoord2sv = func(target uint32, v *int16) {}
	carbon.MultiTexCoord3d = func(target uint32, s float64, t float64, r float64) {}
	carbon.MultiTexCoord3dv = func(target uint32, v *float64) {}
	carbon.MultiTexCoord3f = func(target uint32, s float32, t float32, r float32) {}
	carbon.MultiTexCoord3fv = func(target uint32, v *float32) {}
	carbon.MultiTexCoord3i = func(target uint32, s int32, t int32, r int32) {}
	carbon.MultiTexCoord3iv = func(target uint32, v *int32) {}
	carbon.MultiTexCoord3s = func(target uint32, s int16, t int16, r int16) {}
	carbon.MultiTexCoord3sv = func(target uint32, v *int16) {}
	carbon.MultiTexCoord4d = func(target uint32, s float64, t float64, r float64, q float64) {}
	carbon.MultiTexCoord4dv = func(target uint32, v *float64) {}
	carbon.MultiTexCoord4f = func(target uint32, s float32, t float32, r float32, q float32) {}
	carbon.MultiTexCoord4fv = func(target uint32, v *float32) {}
	carbon.MultiTexCoord4i = func(target uint32, s int32, t int32, r int32, q int32) {}
	carbon.MultiTexCoord4iv = func(target uint32, v *int32) {}
	carbon.MultiTexCoord4s = func(target uint32, s int16, t int16, r int16, q int16) {}
	carbon.MultiTexCoord4sv = func(target uint32, v *int16) {}
	carbon.MultiTexCoordPointerEXT = func(texunit uint32, size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.MultiTexEnvfEXT = func(texunit uint32, target uint32, pname uint32, param float32) {}
	carbon.MultiTexEnvfvEXT = func(texunit uint32, target uint32, pname uint32, params *float32) {}
	carbon.MultiTexEnviEXT = func(texunit uint32, target uint32, pname uint32, param int32) {}
	carbon.MultiTexEnvivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.MultiTexGendEXT = func(texunit uint32, coord uint32, pname uint32, param float64) {}
	carbon.MultiTexGendvEXT = func(texunit uint32, coord uint32, pname uint32, params *float64) {}
	carbon.MultiTexGenfEXT = func(texunit uint32, coord uint32, pname uint32, param float32) {}
	carbon.MultiTexGenfvEXT = func(texunit uint32, coord uint32, pname uint32, params *float32) {}
	carbon.MultiTexGeniEXT = func(texunit uint32, coord uint32, pname uint32, param int32) {}
	carbon.MultiTexGenivEXT = func(texunit uint32, coord uint32, pname uint32, params *int32) {}
	carbon.MultiTexImage1DEXT = func(texunit uint32, target uint32, level int32, internalformat int32, width int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.MultiTexImage2DEXT = func(texunit uint32, target uint32, level int32, internalformat int32, width int32, height int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.MultiTexImage3DEXT = func(texunit uint32, target uint32, level int32, internalformat int32, width int32, height int32, depth int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.MultiTexParameterIivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.MultiTexParameterIuivEXT = func(texunit uint32, target uint32, pname uint32, params *uint32) {}
	carbon.MultiTexParameterfEXT = func(texunit uint32, target uint32, pname uint32, param float32) {}
	carbon.MultiTexParameterfvEXT = func(texunit uint32, target uint32, pname uint32, params *float32) {}
	carbon.MultiTexParameteriEXT = func(texunit uint32, target uint32, pname uint32, param int32) {}
	carbon.MultiTexParameterivEXT = func(texunit uint32, target uint32, pname uint32, params *int32) {}
	carbon.MultiTexRenderbufferEXT = func(texunit uint32, target uint32, renderbuffer uint32) {}
	carbon.MultiTexSubImage1DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, width int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.MultiTexSubImage2DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.MultiTexSubImage3DEXT = func(texunit uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.NamedBufferData = func(buffer uint32, size int, data unsafe.Pointer, usage uint32) {}
	carbon.NamedBufferDataEXT = func(buffer uint32, size int, data unsafe.Pointer, usage uint32) {}
	carbon.NamedBufferPageCommitmentARB = func(buffer uint32, offset int, size int, commit bool) {}
	carbon.NamedBufferPageCommitmentEXT = func(buffer uint32, offset int, size int, commit bool) {}
	carbon.NamedBufferStorage = func(buffer uint32, size int, data unsafe.Pointer, flags uint32) {}
	carbon.NamedBufferStorageEXT = func(buffer uint32, size int, data unsafe.Pointer, flags uint32) {}
	carbon.NamedBufferSubData = func(buffer uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.NamedBufferSubDataEXT = func(buffer uint32, offset int, size int, data unsafe.Pointer) {}
	carbon.NamedCopyBufferSubDataEXT = func(readBuffer uint32, writeBuffer uint32, readOffset int, writeOffset int, size int) {}
	carbon.NamedFramebufferDrawBuffer = func(framebuffer uint32, buf uint32) {}
	carbon.NamedFramebufferDrawBuffers = func(framebuffer uint32, n int32, bufs *uint32) {}
	carbon.NamedFramebufferParameteri = func(framebuffer uint32, pname uint32, param int32) {}
	carbon.NamedFramebufferParameteriEXT = func(framebuffer uint32, pname uint32, param int32) {}
	carbon.NamedFramebufferReadBuffer = func(framebuffer uint32, src uint32) {}
	carbon.NamedFramebufferRenderbuffer = func(framebuffer uint32, attachment uint32, renderbuffertarget uint32, renderbuffer uint32) {}
	carbon.NamedFramebufferRenderbufferEXT = func(framebuffer uint32, attachment uint32, renderbuffertarget uint32, renderbuffer uint32) {}
	carbon.NamedFramebufferSampleLocationsfvARB = func(framebuffer uint32, start uint32, count int32, v *float32) {}
	carbon.NamedFramebufferSampleLocationsfvNV = func(framebuffer uint32, start uint32, count int32, v *float32) {}
	carbon.NamedFramebufferTexture = func(framebuffer uint32, attachment uint32, texture uint32, level int32) {}
	carbon.NamedFramebufferTexture1DEXT = func(framebuffer uint32, attachment uint32, textarget uint32, texture uint32, level int32) {}
	carbon.NamedFramebufferTexture2DEXT = func(framebuffer uint32, attachment uint32, textarget uint32, texture uint32, level int32) {}
	carbon.NamedFramebufferTexture3DEXT = func(framebuffer uint32, attachment uint32, textarget uint32, texture uint32, level int32, zoffset int32) {
	}
	carbon.NamedFramebufferTextureEXT = func(framebuffer uint32, attachment uint32, texture uint32, level int32) {}
	carbon.NamedFramebufferTextureFaceEXT = func(framebuffer uint32, attachment uint32, texture uint32, level int32, face uint32) {}
	carbon.NamedFramebufferTextureLayer = func(framebuffer uint32, attachment uint32, texture uint32, level int32, layer int32) {}
	carbon.NamedFramebufferTextureLayerEXT = func(framebuffer uint32, attachment uint32, texture uint32, level int32, layer int32) {}
	carbon.NamedProgramLocalParameter4dEXT = func(program uint32, target uint32, index uint32, x float64, y float64, z float64, w float64) {}
	carbon.NamedProgramLocalParameter4dvEXT = func(program uint32, target uint32, index uint32, params *float64) {}
	carbon.NamedProgramLocalParameter4fEXT = func(program uint32, target uint32, index uint32, x float32, y float32, z float32, w float32) {}
	carbon.NamedProgramLocalParameter4fvEXT = func(program uint32, target uint32, index uint32, params *float32) {}
	carbon.NamedProgramLocalParameterI4iEXT = func(program uint32, target uint32, index uint32, x int32, y int32, z int32, w int32) {}
	carbon.NamedProgramLocalParameterI4ivEXT = func(program uint32, target uint32, index uint32, params *int32) {}
	carbon.NamedProgramLocalParameterI4uiEXT = func(program uint32, target uint32, index uint32, x uint32, y uint32, z uint32, w uint32) {}
	carbon.NamedProgramLocalParameterI4uivEXT = func(program uint32, target uint32, index uint32, params *uint32) {}
	carbon.NamedProgramLocalParameters4fvEXT = func(program uint32, target uint32, index uint32, count int32, params *float32) {}
	carbon.NamedProgramLocalParametersI4ivEXT = func(program uint32, target uint32, index uint32, count int32, params *int32) {}
	carbon.NamedProgramLocalParametersI4uivEXT = func(program uint32, target uint32, index uint32, count int32, params *uint32) {}
	carbon.NamedProgramStringEXT = func(program uint32, target uint32, format uint32, len int32, xstring unsafe.Pointer) {}
	carbon.NamedRenderbufferStorage = func(renderbuffer uint32, internalformat uint32, width int32, height int32) {}
	carbon.NamedRenderbufferStorageEXT = func(renderbuffer uint32, internalformat uint32, width int32, height int32) {}
	carbon.NamedRenderbufferStorageMultisample = func(renderbuffer uint32, samples int32, internalformat uint32, width int32, height int32) {}
	carbon.NamedRenderbufferStorageMultisampleCoverageEXT = func(renderbuffer uint32, coverageSamples int32, colorSamples int32, internalformat uint32, width int32, height int32) {
	}
	carbon.NamedRenderbufferStorageMultisampleEXT = func(renderbuffer uint32, samples int32, internalformat uint32, width int32, height int32) {}
	carbon.NamedStringARB = func(xtype uint32, namelen int32, name *uint8, stringlen int32, xstring *uint8) {}
	carbon.NewList = func(list uint32, mode uint32) {}
	carbon.Normal3b = func(nx int8, ny int8, nz int8) {}
	carbon.Normal3bv = func(v *int8) {}
	carbon.Normal3d = func(nx float64, ny float64, nz float64) {}
	carbon.Normal3dv = func(v *float64) {}
	carbon.Normal3f = func(nx float32, ny float32, nz float32) {}
	carbon.Normal3fv = func(v *float32) {}
	carbon.Normal3i = func(nx int32, ny int32, nz int32) {}
	carbon.Normal3iv = func(v *int32) {}
	carbon.Normal3s = func(nx int16, ny int16, nz int16) {}
	carbon.Normal3sv = func(v *int16) {}
	carbon.NormalFormatNV = func(xtype uint32, stride int32) {}
	carbon.NormalPointer = func(xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.ObjectLabel = func(identifier uint32, name uint32, length int32, label *uint8) {}
	carbon.ObjectLabelKHR = func(identifier uint32, name uint32, length int32, label *uint8) {}
	carbon.ObjectPtrLabel = func(ptr unsafe.Pointer, length int32, label *uint8) {}
	carbon.ObjectPtrLabelKHR = func(ptr unsafe.Pointer, length int32, label *uint8) {}
	carbon.Ortho = func(left float64, right float64, bottom float64, top float64, zNear float64, zFar float64) {}
	carbon.PassThrough = func(token float32) {}
	carbon.PatchParameterfv = func(pname uint32, values *float32) {}
	carbon.PatchParameteri = func(pname uint32, value int32) {}
	carbon.PathCommandsNV = func(path uint32, numCommands int32, commands *uint8, numCoords int32, coordType uint32, coords unsafe.Pointer) {
	}
	carbon.PathCoordsNV = func(path uint32, numCoords int32, coordType uint32, coords unsafe.Pointer) {}
	carbon.PathCoverDepthFuncNV = func(xfunc uint32) {}
	carbon.PathDashArrayNV = func(path uint32, dashCount int32, dashArray *float32) {}
	carbon.PathGlyphIndexArrayNV = func(firstPathName uint32, fontTarget uint32, fontName unsafe.Pointer, fontStyle uint32, firstGlyphIndex uint32, numGlyphs int32, pathParameterTemplate uint32, emScale float32) uint32 {
		return 0
	}
	carbon.PathGlyphIndexRangeNV = func(fontTarget uint32, fontName unsafe.Pointer, fontStyle uint32, pathParameterTemplate uint32, emScale float32, baseAndCount *uint32) uint32 {
		return 0
	}
	carbon.PathGlyphRangeNV = func(firstPathName uint32, fontTarget uint32, fontName unsafe.Pointer, fontStyle uint32, firstGlyph uint32, numGlyphs int32, handleMissingGlyphs uint32, pathParameterTemplate uint32, emScale float32) {
	}
	carbon.PathGlyphsNV = func(firstPathName uint32, fontTarget uint32, fontName unsafe.Pointer, fontStyle uint32, numGlyphs int32, xtype uint32, charcodes unsafe.Pointer, handleMissingGlyphs uint32, pathParameterTemplate uint32, emScale float32) {
	}
	carbon.PathMemoryGlyphIndexArrayNV = func(firstPathName uint32, fontTarget uint32, fontSize int, fontData unsafe.Pointer, faceIndex int32, firstGlyphIndex uint32, numGlyphs int32, pathParameterTemplate uint32, emScale float32) uint32 {
		return 0
	}
	carbon.PathParameterfNV = func(path uint32, pname uint32, value float32) {}
	carbon.PathParameterfvNV = func(path uint32, pname uint32, value *float32) {}
	carbon.PathParameteriNV = func(path uint32, pname uint32, value int32) {}
	carbon.PathParameterivNV = func(path uint32, pname uint32, value *int32) {}
	carbon.PathStencilDepthOffsetNV = func(factor float32, units float32) {}
	carbon.PathStencilFuncNV = func(xfunc uint32, ref int32, mask uint32) {}
	carbon.PathStringNV = func(path uint32, format uint32, length int32, pathString unsafe.Pointer) {}
	carbon.PathSubCommandsNV = func(path uint32, commandStart int32, commandsToDelete int32, numCommands int32, commands *uint8, numCoords int32, coordType uint32, coords unsafe.Pointer) {
	}
	carbon.PathSubCoordsNV = func(path uint32, coordStart int32, numCoords int32, coordType uint32, coords unsafe.Pointer) {}
	carbon.PauseTransformFeedback = func() {}
	carbon.PixelMapfv = func(xmap uint32, mapsize int32, values *float32) {}
	carbon.PixelMapuiv = func(xmap uint32, mapsize int32, values *uint32) {}
	carbon.PixelMapusv = func(xmap uint32, mapsize int32, values *uint16) {}
	carbon.PixelStoref = func(pname uint32, param float32) {}
	carbon.PixelStorei = func(pname uint32, param int32) {}
	carbon.PixelTransferf = func(pname uint32, param float32) {}
	carbon.PixelTransferi = func(pname uint32, param int32) {}
	carbon.PixelZoom = func(xfactor float32, yfactor float32) {}
	carbon.PointAlongPathNV = func(path uint32, startSegment int32, numSegments int32, distance float32, x *float32, y *float32, tangentX *float32, tangentY *float32) bool {
		return false
	}
	carbon.PointParameterf = func(pname uint32, param float32) {}
	carbon.PointParameterfv = func(pname uint32, params *float32) {}
	carbon.PointParameteri = func(pname uint32, param int32) {}
	carbon.PointParameteriv = func(pname uint32, params *int32) {}
	carbon.PointSize = func(size float32) {}
	carbon.PolygonMode = func(face uint32, mode uint32) {}
	carbon.PolygonOffset = func(factor float32, units float32) {}
	carbon.PolygonOffsetClamp = func(factor float32, units float32, clamp float32) {}
	carbon.PolygonOffsetClampEXT = func(factor float32, units float32, clamp float32) {}
	carbon.PolygonStipple = func(mask *uint8) {}
	carbon.PopAttrib = func() {}
	carbon.PopClientAttrib = func() {}
	carbon.PopDebugGroup = func() {}
	carbon.PopDebugGroupKHR = func() {}
	carbon.PopGroupMarkerEXT = func() {}
	carbon.PopMatrix = func() {}
	carbon.PopName = func() {}
	carbon.PrimitiveBoundingBoxARB = func(minX float32, minY float32, minZ float32, minW float32, maxX float32, maxY float32, maxZ float32, maxW float32) {
	}
	carbon.PrimitiveRestartIndex = func(index uint32) {}
	carbon.PrioritizeTextures = func(n int32, textures *uint32, priorities *float32) {}
	carbon.ProgramBinary = func(program uint32, binaryFormat uint32, binary unsafe.Pointer, length int32) {}
	carbon.ProgramParameteri = func(program uint32, pname uint32, value int32) {}
	carbon.ProgramParameteriARB = func(program uint32, pname uint32, value int32) {}
	carbon.ProgramParameteriEXT = func(program uint32, pname uint32, value int32) {}
	carbon.ProgramPathFragmentInputGenNV = func(program uint32, location int32, genMode uint32, components int32, coeffs *float32) {}
	carbon.ProgramUniform1d = func(program uint32, location int32, v0 float64) {}
	carbon.ProgramUniform1dEXT = func(program uint32, location int32, x float64) {}
	carbon.ProgramUniform1dv = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform1dvEXT = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform1f = func(program uint32, location int32, v0 float32) {}
	carbon.ProgramUniform1fEXT = func(program uint32, location int32, v0 float32) {}
	carbon.ProgramUniform1fv = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform1fvEXT = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform1i = func(program uint32, location int32, v0 int32) {}
	carbon.ProgramUniform1i64ARB = func(program uint32, location int32, x int64) {}
	carbon.ProgramUniform1i64NV = func(program uint32, location int32, x int64) {}
	carbon.ProgramUniform1i64vARB = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform1i64vNV = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform1iEXT = func(program uint32, location int32, v0 int32) {}
	carbon.ProgramUniform1iv = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform1ivEXT = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform1ui = func(program uint32, location int32, v0 uint32) {}
	carbon.ProgramUniform1ui64ARB = func(program uint32, location int32, x uint64) {}
	carbon.ProgramUniform1ui64NV = func(program uint32, location int32, x uint64) {}
	carbon.ProgramUniform1ui64vARB = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform1ui64vNV = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform1uiEXT = func(program uint32, location int32, v0 uint32) {}
	carbon.ProgramUniform1uiv = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform1uivEXT = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform2d = func(program uint32, location int32, v0 float64, v1 float64) {}
	carbon.ProgramUniform2dEXT = func(program uint32, location int32, x float64, y float64) {}
	carbon.ProgramUniform2dv = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform2dvEXT = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform2f = func(program uint32, location int32, v0 float32, v1 float32) {}
	carbon.ProgramUniform2fEXT = func(program uint32, location int32, v0 float32, v1 float32) {}
	carbon.ProgramUniform2fv = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform2fvEXT = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform2i = func(program uint32, location int32, v0 int32, v1 int32) {}
	carbon.ProgramUniform2i64ARB = func(program uint32, location int32, x int64, y int64) {}
	carbon.ProgramUniform2i64NV = func(program uint32, location int32, x int64, y int64) {}
	carbon.ProgramUniform2i64vARB = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform2i64vNV = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform2iEXT = func(program uint32, location int32, v0 int32, v1 int32) {}
	carbon.ProgramUniform2iv = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform2ivEXT = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform2ui = func(program uint32, location int32, v0 uint32, v1 uint32) {}
	carbon.ProgramUniform2ui64ARB = func(program uint32, location int32, x uint64, y uint64) {}
	carbon.ProgramUniform2ui64NV = func(program uint32, location int32, x uint64, y uint64) {}
	carbon.ProgramUniform2ui64vARB = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform2ui64vNV = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform2uiEXT = func(program uint32, location int32, v0 uint32, v1 uint32) {}
	carbon.ProgramUniform2uiv = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform2uivEXT = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform3d = func(program uint32, location int32, v0 float64, v1 float64, v2 float64) {}
	carbon.ProgramUniform3dEXT = func(program uint32, location int32, x float64, y float64, z float64) {}
	carbon.ProgramUniform3dv = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform3dvEXT = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform3f = func(program uint32, location int32, v0 float32, v1 float32, v2 float32) {}
	carbon.ProgramUniform3fEXT = func(program uint32, location int32, v0 float32, v1 float32, v2 float32) {}
	carbon.ProgramUniform3fv = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform3fvEXT = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform3i = func(program uint32, location int32, v0 int32, v1 int32, v2 int32) {}
	carbon.ProgramUniform3i64ARB = func(program uint32, location int32, x int64, y int64, z int64) {}
	carbon.ProgramUniform3i64NV = func(program uint32, location int32, x int64, y int64, z int64) {}
	carbon.ProgramUniform3i64vARB = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform3i64vNV = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform3iEXT = func(program uint32, location int32, v0 int32, v1 int32, v2 int32) {}
	carbon.ProgramUniform3iv = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform3ivEXT = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform3ui = func(program uint32, location int32, v0 uint32, v1 uint32, v2 uint32) {}
	carbon.ProgramUniform3ui64ARB = func(program uint32, location int32, x uint64, y uint64, z uint64) {}
	carbon.ProgramUniform3ui64NV = func(program uint32, location int32, x uint64, y uint64, z uint64) {}
	carbon.ProgramUniform3ui64vARB = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform3ui64vNV = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform3uiEXT = func(program uint32, location int32, v0 uint32, v1 uint32, v2 uint32) {}
	carbon.ProgramUniform3uiv = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform3uivEXT = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform4d = func(program uint32, location int32, v0 float64, v1 float64, v2 float64, v3 float64) {}
	carbon.ProgramUniform4dEXT = func(program uint32, location int32, x float64, y float64, z float64, w float64) {}
	carbon.ProgramUniform4dv = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform4dvEXT = func(program uint32, location int32, count int32, value *float64) {}
	carbon.ProgramUniform4f = func(program uint32, location int32, v0 float32, v1 float32, v2 float32, v3 float32) {}
	carbon.ProgramUniform4fEXT = func(program uint32, location int32, v0 float32, v1 float32, v2 float32, v3 float32) {}
	carbon.ProgramUniform4fv = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform4fvEXT = func(program uint32, location int32, count int32, value *float32) {}
	carbon.ProgramUniform4i = func(program uint32, location int32, v0 int32, v1 int32, v2 int32, v3 int32) {}
	carbon.ProgramUniform4i64ARB = func(program uint32, location int32, x int64, y int64, z int64, w int64) {}
	carbon.ProgramUniform4i64NV = func(program uint32, location int32, x int64, y int64, z int64, w int64) {}
	carbon.ProgramUniform4i64vARB = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform4i64vNV = func(program uint32, location int32, count int32, value *int64) {}
	carbon.ProgramUniform4iEXT = func(program uint32, location int32, v0 int32, v1 int32, v2 int32, v3 int32) {}
	carbon.ProgramUniform4iv = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform4ivEXT = func(program uint32, location int32, count int32, value *int32) {}
	carbon.ProgramUniform4ui = func(program uint32, location int32, v0 uint32, v1 uint32, v2 uint32, v3 uint32) {}
	carbon.ProgramUniform4ui64ARB = func(program uint32, location int32, x uint64, y uint64, z uint64, w uint64) {}
	carbon.ProgramUniform4ui64NV = func(program uint32, location int32, x uint64, y uint64, z uint64, w uint64) {}
	carbon.ProgramUniform4ui64vARB = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform4ui64vNV = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProgramUniform4uiEXT = func(program uint32, location int32, v0 uint32, v1 uint32, v2 uint32, v3 uint32) {}
	carbon.ProgramUniform4uiv = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniform4uivEXT = func(program uint32, location int32, count int32, value *uint32) {}
	carbon.ProgramUniformHandleui64ARB = func(program uint32, location int32, value uint64) {}
	carbon.ProgramUniformHandleui64NV = func(program uint32, location int32, value uint64) {}
	carbon.ProgramUniformHandleui64vARB = func(program uint32, location int32, count int32, values *uint64) {}
	carbon.ProgramUniformHandleui64vNV = func(program uint32, location int32, count int32, values *uint64) {}
	carbon.ProgramUniformMatrix2dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix2fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix2x3dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2x3dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2x3fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix2x3fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix2x4dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2x4dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix2x4fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix2x4fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3x2dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3x2dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3x2fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3x2fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3x4dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3x4dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix3x4fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix3x4fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4x2dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4x2dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4x2fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4x2fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4x3dv = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4x3dvEXT = func(program uint32, location int32, count int32, transpose bool, value *float64) {}
	carbon.ProgramUniformMatrix4x3fv = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformMatrix4x3fvEXT = func(program uint32, location int32, count int32, transpose bool, value *float32) {}
	carbon.ProgramUniformui64NV = func(program uint32, location int32, value uint64) {}
	carbon.ProgramUniformui64vNV = func(program uint32, location int32, count int32, value *uint64) {}
	carbon.ProvokingVertex = func(mode uint32) {}
	carbon.PushAttrib = func(mask uint32) {}
	carbon.PushClientAttrib = func(mask uint32) {}
	carbon.PushClientAttribDefaultEXT = func(mask uint32) {}
	carbon.PushDebugGroup = func(source uint32, id uint32, length int32, message *uint8) {}
	carbon.PushDebugGroupKHR = func(source uint32, id uint32, length int32, message *uint8) {}
	carbon.PushGroupMarkerEXT = func(length int32, marker *uint8) {}
	carbon.PushMatrix = func() {}
	carbon.PushName = func(name uint32) {}
	carbon.QueryCounter = func(id uint32, target uint32) {}
	carbon.RasterPos2d = func(x float64, y float64) {}
	carbon.RasterPos2dv = func(v *float64) {}
	carbon.RasterPos2f = func(x float32, y float32) {}
	carbon.RasterPos2fv = func(v *float32) {}
	carbon.RasterPos2i = func(x int32, y int32) {}
	carbon.RasterPos2iv = func(v *int32) {}
	carbon.RasterPos2s = func(x int16, y int16) {}
	carbon.RasterPos2sv = func(v *int16) {}
	carbon.RasterPos3d = func(x float64, y float64, z float64) {}
	carbon.RasterPos3dv = func(v *float64) {}
	carbon.RasterPos3f = func(x float32, y float32, z float32) {}
	carbon.RasterPos3fv = func(v *float32) {}
	carbon.RasterPos3i = func(x int32, y int32, z int32) {}
	carbon.RasterPos3iv = func(v *int32) {}
	carbon.RasterPos3s = func(x int16, y int16, z int16) {}
	carbon.RasterPos3sv = func(v *int16) {}
	carbon.RasterPos4d = func(x float64, y float64, z float64, w float64) {}
	carbon.RasterPos4dv = func(v *float64) {}
	carbon.RasterPos4f = func(x float32, y float32, z float32, w float32) {}
	carbon.RasterPos4fv = func(v *float32) {}
	carbon.RasterPos4i = func(x int32, y int32, z int32, w int32) {}
	carbon.RasterPos4iv = func(v *int32) {}
	carbon.RasterPos4s = func(x int16, y int16, z int16, w int16) {}
	carbon.RasterPos4sv = func(v *int16) {}
	carbon.RasterSamplesEXT = func(samples uint32, fixedsamplelocations bool) {}
	carbon.ReadBuffer = func(src uint32) {}
	carbon.ReadPixels = func(x int32, y int32, width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.ReadnPixels = func(x int32, y int32, width int32, height int32, format uint32, xtype uint32, bufSize int32, data unsafe.Pointer) {
	}
	carbon.ReadnPixelsARB = func(x int32, y int32, width int32, height int32, format uint32, xtype uint32, bufSize int32, data unsafe.Pointer) {
	}
	carbon.ReadnPixelsKHR = func(x int32, y int32, width int32, height int32, format uint32, xtype uint32, bufSize int32, data unsafe.Pointer) {
	}
	carbon.Rectd = func(x1 float64, y1 float64, x2 float64, y2 float64) {}
	carbon.Rectdv = func(v1 *float64, v2 *float64) {}
	carbon.Rectf = func(x1 float32, y1 float32, x2 float32, y2 float32) {}
	carbon.Rectfv = func(v1 *float32, v2 *float32) {}
	carbon.Recti = func(x1 int32, y1 int32, x2 int32, y2 int32) {}
	carbon.Rectiv = func(v1 *int32, v2 *int32) {}
	carbon.Rects = func(x1 int16, y1 int16, x2 int16, y2 int16) {}
	carbon.Rectsv = func(v1 *int16, v2 *int16) {}
	carbon.ReleaseShaderCompiler = func() {}
	carbon.RenderMode = func(mode uint32) int32 { return 0 }
	carbon.RenderbufferStorage = func(target uint32, internalformat uint32, width int32, height int32) {}
	carbon.RenderbufferStorageMultisample = func(target uint32, samples int32, internalformat uint32, width int32, height int32) {}
	carbon.RenderbufferStorageMultisampleCoverageNV = func(target uint32, coverageSamples int32, colorSamples int32, internalformat uint32, width int32, height int32) {
	}
	carbon.ResolveDepthValuesNV = func() {}
	carbon.ResumeTransformFeedback = func() {}
	carbon.Rotated = func(angle float64, x float64, y float64, z float64) {}
	carbon.Rotatef = func(angle float32, x float32, y float32, z float32) {}
	carbon.SampleCoverage = func(value float32, invert bool) {}
	carbon.SampleMaski = func(maskNumber uint32, mask uint32) {}
	carbon.SamplerParameterIiv = func(sampler uint32, pname uint32, param *int32) {}
	carbon.SamplerParameterIuiv = func(sampler uint32, pname uint32, param *uint32) {}
	carbon.SamplerParameterf = func(sampler uint32, pname uint32, param float32) {}
	carbon.SamplerParameterfv = func(sampler uint32, pname uint32, param *float32) {}
	carbon.SamplerParameteri = func(sampler uint32, pname uint32, param int32) {}
	carbon.SamplerParameteriv = func(sampler uint32, pname uint32, param *int32) {}
	carbon.Scaled = func(x float64, y float64, z float64) {}
	carbon.Scalef = func(x float32, y float32, z float32) {}
	carbon.Scissor = func(x int32, y int32, width int32, height int32) {}
	carbon.ScissorArrayv = func(first uint32, count int32, v *int32) {}
	carbon.ScissorIndexed = func(index uint32, left int32, bottom int32, width int32, height int32) {}
	carbon.ScissorIndexedv = func(index uint32, v *int32) {}
	carbon.SecondaryColor3b = func(red int8, green int8, blue int8) {}
	carbon.SecondaryColor3bv = func(v *int8) {}
	carbon.SecondaryColor3d = func(red float64, green float64, blue float64) {}
	carbon.SecondaryColor3dv = func(v *float64) {}
	carbon.SecondaryColor3f = func(red float32, green float32, blue float32) {}
	carbon.SecondaryColor3fv = func(v *float32) {}
	carbon.SecondaryColor3i = func(red int32, green int32, blue int32) {}
	carbon.SecondaryColor3iv = func(v *int32) {}
	carbon.SecondaryColor3s = func(red int16, green int16, blue int16) {}
	carbon.SecondaryColor3sv = func(v *int16) {}
	carbon.SecondaryColor3ub = func(red uint8, green uint8, blue uint8) {}
	carbon.SecondaryColor3ubv = func(v *uint8) {}
	carbon.SecondaryColor3ui = func(red uint32, green uint32, blue uint32) {}
	carbon.SecondaryColor3uiv = func(v *uint32) {}
	carbon.SecondaryColor3us = func(red uint16, green uint16, blue uint16) {}
	carbon.SecondaryColor3usv = func(v *uint16) {}
	carbon.SecondaryColorFormatNV = func(size int32, xtype uint32, stride int32) {}
	carbon.SecondaryColorPointer = func(size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.SelectBuffer = func(size int32, buffer *uint32) {}
	carbon.SelectPerfMonitorCountersAMD = func(monitor uint32, enable bool, group uint32, numCounters int32, counterList *uint32) {}
	carbon.ShadeModel = func(mode uint32) {}
	carbon.ShaderBinary = func(count int32, shaders *uint32, binaryformat uint32, binary unsafe.Pointer, length int32) {}
	carbon.ShaderSource = func(shader uint32, count int32, xstring **uint8, length *int32) {}
	carbon.ShaderStorageBlockBinding = func(program uint32, storageBlockIndex uint32, storageBlockBinding uint32) {}
	carbon.SignalVkFenceNV = func(vkFence uint64) {}
	carbon.SignalVkSemaphoreNV = func(vkSemaphore uint64) {}
	carbon.SpecializeShader = func(shader uint32, pEntryPoint *uint8, numSpecializationConstants uint32, pConstantIndex *uint32, pConstantValue *uint32) {
	}
	carbon.SpecializeShaderARB = func(shader uint32, pEntryPoint *uint8, numSpecializationConstants uint32, pConstantIndex *uint32, pConstantValue *uint32) {
	}
	carbon.StateCaptureNV = func(state uint32, mode uint32) {}
	carbon.StencilFillPathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, fillMode uint32, mask uint32, transformType uint32, transformValues *float32) {
	}
	carbon.StencilFillPathNV = func(path uint32, fillMode uint32, mask uint32) {}
	carbon.StencilFunc = func(xfunc uint32, ref int32, mask uint32) {}
	carbon.StencilFuncSeparate = func(face uint32, xfunc uint32, ref int32, mask uint32) {}
	carbon.StencilMask = func(mask uint32) {}
	carbon.StencilMaskSeparate = func(face uint32, mask uint32) {}
	carbon.StencilOp = func(fail uint32, zfail uint32, zpass uint32) {}
	carbon.StencilOpSeparate = func(face uint32, sfail uint32, dpfail uint32, dppass uint32) {}
	carbon.StencilStrokePathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, reference int32, mask uint32, transformType uint32, transformValues *float32) {
	}
	carbon.StencilStrokePathNV = func(path uint32, reference int32, mask uint32) {}
	carbon.StencilThenCoverFillPathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, fillMode uint32, mask uint32, coverMode uint32, transformType uint32, transformValues *float32) {
	}
	carbon.StencilThenCoverFillPathNV = func(path uint32, fillMode uint32, mask uint32, coverMode uint32) {}
	carbon.StencilThenCoverStrokePathInstancedNV = func(numPaths int32, pathNameType uint32, paths unsafe.Pointer, pathBase uint32, reference int32, mask uint32, coverMode uint32, transformType uint32, transformValues *float32) {
	}
	carbon.StencilThenCoverStrokePathNV = func(path uint32, reference int32, mask uint32, coverMode uint32) {}
	carbon.SubpixelPrecisionBiasNV = func(xbits uint32, ybits uint32) {}
	carbon.TexBuffer = func(target uint32, internalformat uint32, buffer uint32) {}
	carbon.TexBufferARB = func(target uint32, internalformat uint32, buffer uint32) {}
	carbon.TexBufferRange = func(target uint32, internalformat uint32, buffer uint32, offset int, size int) {}
	carbon.TexCoord1d = func(s float64) {}
	carbon.TexCoord1dv = func(v *float64) {}
	carbon.TexCoord1f = func(s float32) {}
	carbon.TexCoord1fv = func(v *float32) {}
	carbon.TexCoord1i = func(s int32) {}
	carbon.TexCoord1iv = func(v *int32) {}
	carbon.TexCoord1s = func(s int16) {}
	carbon.TexCoord1sv = func(v *int16) {}
	carbon.TexCoord2d = func(s float64, t float64) {}
	carbon.TexCoord2dv = func(v *float64) {}
	carbon.TexCoord2f = func(s float32, t float32) {}
	carbon.TexCoord2fv = func(v *float32) {}
	carbon.TexCoord2i = func(s int32, t int32) {}
	carbon.TexCoord2iv = func(v *int32) {}
	carbon.TexCoord2s = func(s int16, t int16) {}
	carbon.TexCoord2sv = func(v *int16) {}
	carbon.TexCoord3d = func(s float64, t float64, r float64) {}
	carbon.TexCoord3dv = func(v *float64) {}
	carbon.TexCoord3f = func(s float32, t float32, r float32) {}
	carbon.TexCoord3fv = func(v *float32) {}
	carbon.TexCoord3i = func(s int32, t int32, r int32) {}
	carbon.TexCoord3iv = func(v *int32) {}
	carbon.TexCoord3s = func(s int16, t int16, r int16) {}
	carbon.TexCoord3sv = func(v *int16) {}
	carbon.TexCoord4d = func(s float64, t float64, r float64, q float64) {}
	carbon.TexCoord4dv = func(v *float64) {}
	carbon.TexCoord4f = func(s float32, t float32, r float32, q float32) {}
	carbon.TexCoord4fv = func(v *float32) {}
	carbon.TexCoord4i = func(s int32, t int32, r int32, q int32) {}
	carbon.TexCoord4iv = func(v *int32) {}
	carbon.TexCoord4s = func(s int16, t int16, r int16, q int16) {}
	carbon.TexCoord4sv = func(v *int16) {}
	carbon.TexCoordFormatNV = func(size int32, xtype uint32, stride int32) {}
	carbon.TexCoordPointer = func(size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.TexEnvf = func(target uint32, pname uint32, param float32) {}
	carbon.TexEnvfv = func(target uint32, pname uint32, params *float32) {}
	carbon.TexEnvi = func(target uint32, pname uint32, param int32) {}
	carbon.TexEnviv = func(target uint32, pname uint32, params *int32) {}
	carbon.TexGend = func(coord uint32, pname uint32, param float64) {}
	carbon.TexGendv = func(coord uint32, pname uint32, params *float64) {}
	carbon.TexGenf = func(coord uint32, pname uint32, param float32) {}
	carbon.TexGenfv = func(coord uint32, pname uint32, params *float32) {}
	carbon.TexGeni = func(coord uint32, pname uint32, param int32) {}
	carbon.TexGeniv = func(coord uint32, pname uint32, params *int32) {}
	carbon.TexImage1D = func(target uint32, level int32, internalformat int32, width int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexImage2D = func(target uint32, level int32, internalformat int32, width int32, height int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexImage2DMultisample = func(target uint32, samples int32, internalformat uint32, width int32, height int32, fixedsamplelocations bool) {
	}
	carbon.TexImage3D = func(target uint32, level int32, internalformat int32, width int32, height int32, depth int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexImage3DMultisample = func(target uint32, samples int32, internalformat uint32, width int32, height int32, depth int32, fixedsamplelocations bool) {
	}
	carbon.TexPageCommitmentARB = func(target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, commit bool) {
	}
	carbon.TexParameterIiv = func(target uint32, pname uint32, params *int32) {}
	carbon.TexParameterIuiv = func(target uint32, pname uint32, params *uint32) {}
	carbon.TexParameterf = func(target uint32, pname uint32, param float32) {}
	carbon.TexParameterfv = func(target uint32, pname uint32, params *float32) {}
	carbon.TexParameteri = func(target uint32, pname uint32, param int32) {}
	carbon.TexParameteriv = func(target uint32, pname uint32, params *int32) {}
	carbon.TexStorage1D = func(target uint32, levels int32, internalformat uint32, width int32) {}
	carbon.TexStorage2D = func(target uint32, levels int32, internalformat uint32, width int32, height int32) {}
	carbon.TexStorage2DMultisample = func(target uint32, samples int32, internalformat uint32, width int32, height int32, fixedsamplelocations bool) {
	}
	carbon.TexStorage3D = func(target uint32, levels int32, internalformat uint32, width int32, height int32, depth int32) {}
	carbon.TexStorage3DMultisample = func(target uint32, samples int32, internalformat uint32, width int32, height int32, depth int32, fixedsamplelocations bool) {
	}
	carbon.TexSubImage1D = func(target uint32, level int32, xoffset int32, width int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexSubImage2D = func(target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexSubImage3D = func(target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureBarrier = func() {}
	carbon.TextureBarrierNV = func() {}
	carbon.TextureBuffer = func(texture uint32, internalformat uint32, buffer uint32) {}
	carbon.TextureBufferEXT = func(texture uint32, target uint32, internalformat uint32, buffer uint32) {}
	carbon.TextureBufferRange = func(texture uint32, internalformat uint32, buffer uint32, offset int, size int) {}
	carbon.TextureBufferRangeEXT = func(texture uint32, target uint32, internalformat uint32, buffer uint32, offset int, size int) {}
	carbon.TextureImage1DEXT = func(texture uint32, target uint32, level int32, internalformat int32, width int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureImage2DEXT = func(texture uint32, target uint32, level int32, internalformat int32, width int32, height int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureImage3DEXT = func(texture uint32, target uint32, level int32, internalformat int32, width int32, height int32, depth int32, border int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TexturePageCommitmentEXT = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, commit bool) {
	}
	carbon.TextureParameterIiv = func(texture uint32, pname uint32, params *int32) {}
	carbon.TextureParameterIivEXT = func(texture uint32, target uint32, pname uint32, params *int32) {}
	carbon.TextureParameterIuiv = func(texture uint32, pname uint32, params *uint32) {}
	carbon.TextureParameterIuivEXT = func(texture uint32, target uint32, pname uint32, params *uint32) {}
	carbon.TextureParameterf = func(texture uint32, pname uint32, param float32) {}
	carbon.TextureParameterfEXT = func(texture uint32, target uint32, pname uint32, param float32) {}
	carbon.TextureParameterfv = func(texture uint32, pname uint32, param *float32) {}
	carbon.TextureParameterfvEXT = func(texture uint32, target uint32, pname uint32, params *float32) {}
	carbon.TextureParameteri = func(texture uint32, pname uint32, param int32) {}
	carbon.TextureParameteriEXT = func(texture uint32, target uint32, pname uint32, param int32) {}
	carbon.TextureParameteriv = func(texture uint32, pname uint32, param *int32) {}
	carbon.TextureParameterivEXT = func(texture uint32, target uint32, pname uint32, params *int32) {}
	carbon.TextureRenderbufferEXT = func(texture uint32, target uint32, renderbuffer uint32) {}
	carbon.TextureStorage1D = func(texture uint32, levels int32, internalformat uint32, width int32) {}
	carbon.TextureStorage1DEXT = func(texture uint32, target uint32, levels int32, internalformat uint32, width int32) {}
	carbon.TextureStorage2D = func(texture uint32, levels int32, internalformat uint32, width int32, height int32) {}
	carbon.TextureStorage2DEXT = func(texture uint32, target uint32, levels int32, internalformat uint32, width int32, height int32) {}
	carbon.TextureStorage2DMultisample = func(texture uint32, samples int32, internalformat uint32, width int32, height int32, fixedsamplelocations bool) {
	}
	carbon.TextureStorage2DMultisampleEXT = func(texture uint32, target uint32, samples int32, internalformat uint32, width int32, height int32, fixedsamplelocations bool) {
	}
	carbon.TextureStorage3D = func(texture uint32, levels int32, internalformat uint32, width int32, height int32, depth int32) {}
	carbon.TextureStorage3DEXT = func(texture uint32, target uint32, levels int32, internalformat uint32, width int32, height int32, depth int32) {
	}
	carbon.TextureStorage3DMultisample = func(texture uint32, samples int32, internalformat uint32, width int32, height int32, depth int32, fixedsamplelocations bool) {
	}
	carbon.TextureStorage3DMultisampleEXT = func(texture uint32, target uint32, samples int32, internalformat uint32, width int32, height int32, depth int32, fixedsamplelocations bool) {
	}
	carbon.TextureSubImage1D = func(texture uint32, level int32, xoffset int32, width int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureSubImage1DEXT = func(texture uint32, target uint32, level int32, xoffset int32, width int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureSubImage2D = func(texture uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureSubImage2DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, width int32, height int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureSubImage3D = func(texture uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureSubImage3DEXT = func(texture uint32, target uint32, level int32, xoffset int32, yoffset int32, zoffset int32, width int32, height int32, depth int32, format uint32, xtype uint32, pixels unsafe.Pointer) {
	}
	carbon.TextureView = func(texture uint32, target uint32, origtexture uint32, internalformat uint32, minlevel uint32, numlevels uint32, minlayer uint32, numlayers uint32) {
	}
	carbon.TransformFeedbackBufferBase = func(xfb uint32, index uint32, buffer uint32) {}
	carbon.TransformFeedbackBufferRange = func(xfb uint32, index uint32, buffer uint32, offset int, size int) {}
	carbon.TransformFeedbackVaryings = func(program uint32, count int32, varyings **uint8, bufferMode uint32) {}
	carbon.TransformPathNV = func(resultPath uint32, srcPath uint32, transformType uint32, transformValues *float32) {}
	carbon.Translated = func(x float64, y float64, z float64) {}
	carbon.Translatef = func(x float32, y float32, z float32) {}
	carbon.Uniform1d = func(location int32, x float64) {}
	carbon.Uniform1dv = func(location int32, count int32, value *float64) {}
	carbon.Uniform1f = func(location int32, v0 float32) {}
	carbon.Uniform1fv = func(location int32, count int32, value *float32) {}
	carbon.Uniform1i = func(location int32, v0 int32) {}
	carbon.Uniform1i64ARB = func(location int32, x int64) {}
	carbon.Uniform1i64NV = func(location int32, x int64) {}
	carbon.Uniform1i64vARB = func(location int32, count int32, value *int64) {}
	carbon.Uniform1i64vNV = func(location int32, count int32, value *int64) {}
	carbon.Uniform1iv = func(location int32, count int32, value *int32) {}
	carbon.Uniform1ui = func(location int32, v0 uint32) {}
	carbon.Uniform1ui64ARB = func(location int32, x uint64) {}
	carbon.Uniform1ui64NV = func(location int32, x uint64) {}
	carbon.Uniform1ui64vARB = func(location int32, count int32, value *uint64) {}
	carbon.Uniform1ui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.Uniform1uiv = func(location int32, count int32, value *uint32) {}
	carbon.Uniform2d = func(location int32, x float64, y float64) {}
	carbon.Uniform2dv = func(location int32, count int32, value *float64) {}
	carbon.Uniform2f = func(location int32, v0 float32, v1 float32) {}
	carbon.Uniform2fv = func(location int32, count int32, value *float32) {}
	carbon.Uniform2i = func(location int32, v0 int32, v1 int32) {}
	carbon.Uniform2i64ARB = func(location int32, x int64, y int64) {}
	carbon.Uniform2i64NV = func(location int32, x int64, y int64) {}
	carbon.Uniform2i64vARB = func(location int32, count int32, value *int64) {}
	carbon.Uniform2i64vNV = func(location int32, count int32, value *int64) {}
	carbon.Uniform2iv = func(location int32, count int32, value *int32) {}
	carbon.Uniform2ui = func(location int32, v0 uint32, v1 uint32) {}
	carbon.Uniform2ui64ARB = func(location int32, x uint64, y uint64) {}
	carbon.Uniform2ui64NV = func(location int32, x uint64, y uint64) {}
	carbon.Uniform2ui64vARB = func(location int32, count int32, value *uint64) {}
	carbon.Uniform2ui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.Uniform2uiv = func(location int32, count int32, value *uint32) {}
	carbon.Uniform3d = func(location int32, x float64, y float64, z float64) {}
	carbon.Uniform3dv = func(location int32, count int32, value *float64) {}
	carbon.Uniform3f = func(location int32, v0 float32, v1 float32, v2 float32) {}
	carbon.Uniform3fv = func(location int32, count int32, value *float32) {}
	carbon.Uniform3i = func(location int32, v0 int32, v1 int32, v2 int32) {}
	carbon.Uniform3i64ARB = func(location int32, x int64, y int64, z int64) {}
	carbon.Uniform3i64NV = func(location int32, x int64, y int64, z int64) {}
	carbon.Uniform3i64vARB = func(location int32, count int32, value *int64) {}
	carbon.Uniform3i64vNV = func(location int32, count int32, value *int64) {}
	carbon.Uniform3iv = func(location int32, count int32, value *int32) {}
	carbon.Uniform3ui = func(location int32, v0 uint32, v1 uint32, v2 uint32) {}
	carbon.Uniform3ui64ARB = func(location int32, x uint64, y uint64, z uint64) {}
	carbon.Uniform3ui64NV = func(location int32, x uint64, y uint64, z uint64) {}
	carbon.Uniform3ui64vARB = func(location int32, count int32, value *uint64) {}
	carbon.Uniform3ui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.Uniform3uiv = func(location int32, count int32, value *uint32) {}
	carbon.Uniform4d = func(location int32, x float64, y float64, z float64, w float64) {}
	carbon.Uniform4dv = func(location int32, count int32, value *float64) {}
	carbon.Uniform4f = func(location int32, v0 float32, v1 float32, v2 float32, v3 float32) {}
	carbon.Uniform4fv = func(location int32, count int32, value *float32) {}
	carbon.Uniform4i = func(location int32, v0 int32, v1 int32, v2 int32, v3 int32) {}
	carbon.Uniform4i64ARB = func(location int32, x int64, y int64, z int64, w int64) {}
	carbon.Uniform4i64NV = func(location int32, x int64, y int64, z int64, w int64) {}
	carbon.Uniform4i64vARB = func(location int32, count int32, value *int64) {}
	carbon.Uniform4i64vNV = func(location int32, count int32, value *int64) {}
	carbon.Uniform4iv = func(location int32, count int32, value *int32) {}
	carbon.Uniform4ui = func(location int32, v0 uint32, v1 uint32, v2 uint32, v3 uint32) {}
	carbon.Uniform4ui64ARB = func(location int32, x uint64, y uint64, z uint64, w uint64) {}
	carbon.Uniform4ui64NV = func(location int32, x uint64, y uint64, z uint64, w uint64) {}
	carbon.Uniform4ui64vARB = func(location int32, count int32, value *uint64) {}
	carbon.Uniform4ui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.Uniform4uiv = func(location int32, count int32, value *uint32) {}
	carbon.UniformBlockBinding = func(program uint32, uniformBlockIndex uint32, uniformBlockBinding uint32) {}
	carbon.UniformHandleui64ARB = func(location int32, value uint64) {}
	carbon.UniformHandleui64NV = func(location int32, value uint64) {}
	carbon.UniformHandleui64vARB = func(location int32, count int32, value *uint64) {}
	carbon.UniformHandleui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.UniformMatrix2dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix2fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix2x3dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix2x3fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix2x4dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix2x4fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix3dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix3fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix3x2dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix3x2fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix3x4dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix3x4fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix4dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix4fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix4x2dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix4x2fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformMatrix4x3dv = func(location int32, count int32, transpose bool, value *float64) {}
	carbon.UniformMatrix4x3fv = func(location int32, count int32, transpose bool, value *float32) {}
	carbon.UniformSubroutinesuiv = func(shadertype uint32, count int32, indices *uint32) {}
	carbon.Uniformui64NV = func(location int32, value uint64) {}
	carbon.Uniformui64vNV = func(location int32, count int32, value *uint64) {}
	carbon.UnmapBuffer = func(target uint32) bool { return false }
	carbon.UnmapNamedBuffer = func(buffer uint32) bool { return false }
	carbon.UnmapNamedBufferEXT = func(buffer uint32) bool { return false }
	carbon.UseProgram = func(program uint32) {}
	carbon.UseProgramStages = func(pipeline uint32, stages uint32, program uint32) {}
	carbon.UseProgramStagesEXT = func(pipeline uint32, stages uint32, program uint32) {}
	carbon.UseShaderProgramEXT = func(xtype uint32, program uint32) {}
	carbon.ValidateProgram = func(program uint32) {}
	carbon.ValidateProgramPipeline = func(pipeline uint32) {}
	carbon.ValidateProgramPipelineEXT = func(pipeline uint32) {}
	carbon.Vertex2d = func(x float64, y float64) {}
	carbon.Vertex2dv = func(v *float64) {}
	carbon.Vertex2f = func(x float32, y float32) {}
	carbon.Vertex2fv = func(v *float32) {}
	carbon.Vertex2i = func(x int32, y int32) {}
	carbon.Vertex2iv = func(v *int32) {}
	carbon.Vertex2s = func(x int16, y int16) {}
	carbon.Vertex2sv = func(v *int16) {}
	carbon.Vertex3d = func(x float64, y float64, z float64) {}
	carbon.Vertex3dv = func(v *float64) {}
	carbon.Vertex3f = func(x float32, y float32, z float32) {}
	carbon.Vertex3fv = func(v *float32) {}
	carbon.Vertex3i = func(x int32, y int32, z int32) {}
	carbon.Vertex3iv = func(v *int32) {}
	carbon.Vertex3s = func(x int16, y int16, z int16) {}
	carbon.Vertex3sv = func(v *int16) {}
	carbon.Vertex4d = func(x float64, y float64, z float64, w float64) {}
	carbon.Vertex4dv = func(v *float64) {}
	carbon.Vertex4f = func(x float32, y float32, z float32, w float32) {}
	carbon.Vertex4fv = func(v *float32) {}
	carbon.Vertex4i = func(x int32, y int32, z int32, w int32) {}
	carbon.Vertex4iv = func(v *int32) {}
	carbon.Vertex4s = func(x int16, y int16, z int16, w int16) {}
	carbon.Vertex4sv = func(v *int16) {}
	carbon.VertexArrayAttribBinding = func(vaobj uint32, attribindex uint32, bindingindex uint32) {}
	carbon.VertexArrayAttribFormat = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, normalized bool, relativeoffset uint32) {
	}
	carbon.VertexArrayAttribIFormat = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexArrayAttribLFormat = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexArrayBindVertexBufferEXT = func(vaobj uint32, bindingindex uint32, buffer uint32, offset int, stride int32) {}
	carbon.VertexArrayBindingDivisor = func(vaobj uint32, bindingindex uint32, divisor uint32) {}
	carbon.VertexArrayColorOffsetEXT = func(vaobj uint32, buffer uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayEdgeFlagOffsetEXT = func(vaobj uint32, buffer uint32, stride int32, offset int) {}
	carbon.VertexArrayElementBuffer = func(vaobj uint32, buffer uint32) {}
	carbon.VertexArrayFogCoordOffsetEXT = func(vaobj uint32, buffer uint32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayIndexOffsetEXT = func(vaobj uint32, buffer uint32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayMultiTexCoordOffsetEXT = func(vaobj uint32, buffer uint32, texunit uint32, size int32, xtype uint32, stride int32, offset int) {
	}
	carbon.VertexArrayNormalOffsetEXT = func(vaobj uint32, buffer uint32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArraySecondaryColorOffsetEXT = func(vaobj uint32, buffer uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayTexCoordOffsetEXT = func(vaobj uint32, buffer uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayVertexAttribBindingEXT = func(vaobj uint32, attribindex uint32, bindingindex uint32) {}
	carbon.VertexArrayVertexAttribDivisorEXT = func(vaobj uint32, index uint32, divisor uint32) {}
	carbon.VertexArrayVertexAttribFormatEXT = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, normalized bool, relativeoffset uint32) {
	}
	carbon.VertexArrayVertexAttribIFormatEXT = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexArrayVertexAttribIOffsetEXT = func(vaobj uint32, buffer uint32, index uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayVertexAttribLFormatEXT = func(vaobj uint32, attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexArrayVertexAttribLOffsetEXT = func(vaobj uint32, buffer uint32, index uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexArrayVertexAttribOffsetEXT = func(vaobj uint32, buffer uint32, index uint32, size int32, xtype uint32, normalized bool, stride int32, offset int) {
	}
	carbon.VertexArrayVertexBindingDivisorEXT = func(vaobj uint32, bindingindex uint32, divisor uint32) {}
	carbon.VertexArrayVertexBuffer = func(vaobj uint32, bindingindex uint32, buffer uint32, offset int, stride int32) {}
	carbon.VertexArrayVertexBuffers = func(vaobj uint32, first uint32, count int32, buffers *uint32, offsets *int, strides *int32) {}
	carbon.VertexArrayVertexOffsetEXT = func(vaobj uint32, buffer uint32, size int32, xtype uint32, stride int32, offset int) {}
	carbon.VertexAttrib1d = func(index uint32, x float64) {}
	carbon.VertexAttrib1dv = func(index uint32, v *float64) {}
	carbon.VertexAttrib1f = func(index uint32, x float32) {}
	carbon.VertexAttrib1fv = func(index uint32, v *float32) {}
	carbon.VertexAttrib1s = func(index uint32, x int16) {}
	carbon.VertexAttrib1sv = func(index uint32, v *int16) {}
	carbon.VertexAttrib2d = func(index uint32, x float64, y float64) {}
	carbon.VertexAttrib2dv = func(index uint32, v *float64) {}
	carbon.VertexAttrib2f = func(index uint32, x float32, y float32) {}
	carbon.VertexAttrib2fv = func(index uint32, v *float32) {}
	carbon.VertexAttrib2s = func(index uint32, x int16, y int16) {}
	carbon.VertexAttrib2sv = func(index uint32, v *int16) {}
	carbon.VertexAttrib3d = func(index uint32, x float64, y float64, z float64) {}
	carbon.VertexAttrib3dv = func(index uint32, v *float64) {}
	carbon.VertexAttrib3f = func(index uint32, x float32, y float32, z float32) {}
	carbon.VertexAttrib3fv = func(index uint32, v *float32) {}
	carbon.VertexAttrib3s = func(index uint32, x int16, y int16, z int16) {}
	carbon.VertexAttrib3sv = func(index uint32, v *int16) {}
	carbon.VertexAttrib4Nbv = func(index uint32, v *int8) {}
	carbon.VertexAttrib4Niv = func(index uint32, v *int32) {}
	carbon.VertexAttrib4Nsv = func(index uint32, v *int16) {}
	carbon.VertexAttrib4Nub = func(index uint32, x uint8, y uint8, z uint8, w uint8) {}
	carbon.VertexAttrib4Nubv = func(index uint32, v *uint8) {}
	carbon.VertexAttrib4Nuiv = func(index uint32, v *uint32) {}
	carbon.VertexAttrib4Nusv = func(index uint32, v *uint16) {}
	carbon.VertexAttrib4bv = func(index uint32, v *int8) {}
	carbon.VertexAttrib4d = func(index uint32, x float64, y float64, z float64, w float64) {}
	carbon.VertexAttrib4dv = func(index uint32, v *float64) {}
	carbon.VertexAttrib4f = func(index uint32, x float32, y float32, z float32, w float32) {}
	carbon.VertexAttrib4fv = func(index uint32, v *float32) {}
	carbon.VertexAttrib4iv = func(index uint32, v *int32) {}
	carbon.VertexAttrib4s = func(index uint32, x int16, y int16, z int16, w int16) {}
	carbon.VertexAttrib4sv = func(index uint32, v *int16) {}
	carbon.VertexAttrib4ubv = func(index uint32, v *uint8) {}
	carbon.VertexAttrib4uiv = func(index uint32, v *uint32) {}
	carbon.VertexAttrib4usv = func(index uint32, v *uint16) {}
	carbon.VertexAttribBinding = func(attribindex uint32, bindingindex uint32) {}
	carbon.VertexAttribDivisor = func(index uint32, divisor uint32) {}
	carbon.VertexAttribDivisorARB = func(index uint32, divisor uint32) {}
	carbon.VertexAttribFormat = func(attribindex uint32, size int32, xtype uint32, normalized bool, relativeoffset uint32) {}
	carbon.VertexAttribFormatNV = func(index uint32, size int32, xtype uint32, normalized bool, stride int32) {}
	carbon.VertexAttribI1i = func(index uint32, x int32) {}
	carbon.VertexAttribI1iv = func(index uint32, v *int32) {}
	carbon.VertexAttribI1ui = func(index uint32, x uint32) {}
	carbon.VertexAttribI1uiv = func(index uint32, v *uint32) {}
	carbon.VertexAttribI2i = func(index uint32, x int32, y int32) {}
	carbon.VertexAttribI2iv = func(index uint32, v *int32) {}
	carbon.VertexAttribI2ui = func(index uint32, x uint32, y uint32) {}
	carbon.VertexAttribI2uiv = func(index uint32, v *uint32) {}
	carbon.VertexAttribI3i = func(index uint32, x int32, y int32, z int32) {}
	carbon.VertexAttribI3iv = func(index uint32, v *int32) {}
	carbon.VertexAttribI3ui = func(index uint32, x uint32, y uint32, z uint32) {}
	carbon.VertexAttribI3uiv = func(index uint32, v *uint32) {}
	carbon.VertexAttribI4bv = func(index uint32, v *int8) {}
	carbon.VertexAttribI4i = func(index uint32, x int32, y int32, z int32, w int32) {}
	carbon.VertexAttribI4iv = func(index uint32, v *int32) {}
	carbon.VertexAttribI4sv = func(index uint32, v *int16) {}
	carbon.VertexAttribI4ubv = func(index uint32, v *uint8) {}
	carbon.VertexAttribI4ui = func(index uint32, x uint32, y uint32, z uint32, w uint32) {}
	carbon.VertexAttribI4uiv = func(index uint32, v *uint32) {}
	carbon.VertexAttribI4usv = func(index uint32, v *uint16) {}
	carbon.VertexAttribIFormat = func(attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexAttribIFormatNV = func(index uint32, size int32, xtype uint32, stride int32) {}
	carbon.VertexAttribIPointer = func(index uint32, size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.VertexAttribL1d = func(index uint32, x float64) {}
	carbon.VertexAttribL1dv = func(index uint32, v *float64) {}
	carbon.VertexAttribL1i64NV = func(index uint32, x int64) {}
	carbon.VertexAttribL1i64vNV = func(index uint32, v *int64) {}
	carbon.VertexAttribL1ui64ARB = func(index uint32, x uint64) {}
	carbon.VertexAttribL1ui64NV = func(index uint32, x uint64) {}
	carbon.VertexAttribL1ui64vARB = func(index uint32, v *uint64) {}
	carbon.VertexAttribL1ui64vNV = func(index uint32, v *uint64) {}
	carbon.VertexAttribL2d = func(index uint32, x float64, y float64) {}
	carbon.VertexAttribL2dv = func(index uint32, v *float64) {}
	carbon.VertexAttribL2i64NV = func(index uint32, x int64, y int64) {}
	carbon.VertexAttribL2i64vNV = func(index uint32, v *int64) {}
	carbon.VertexAttribL2ui64NV = func(index uint32, x uint64, y uint64) {}
	carbon.VertexAttribL2ui64vNV = func(index uint32, v *uint64) {}
	carbon.VertexAttribL3d = func(index uint32, x float64, y float64, z float64) {}
	carbon.VertexAttribL3dv = func(index uint32, v *float64) {}
	carbon.VertexAttribL3i64NV = func(index uint32, x int64, y int64, z int64) {}
	carbon.VertexAttribL3i64vNV = func(index uint32, v *int64) {}
	carbon.VertexAttribL3ui64NV = func(index uint32, x uint64, y uint64, z uint64) {}
	carbon.VertexAttribL3ui64vNV = func(index uint32, v *uint64) {}
	carbon.VertexAttribL4d = func(index uint32, x float64, y float64, z float64, w float64) {}
	carbon.VertexAttribL4dv = func(index uint32, v *float64) {}
	carbon.VertexAttribL4i64NV = func(index uint32, x int64, y int64, z int64, w int64) {}
	carbon.VertexAttribL4i64vNV = func(index uint32, v *int64) {}
	carbon.VertexAttribL4ui64NV = func(index uint32, x uint64, y uint64, z uint64, w uint64) {}
	carbon.VertexAttribL4ui64vNV = func(index uint32, v *uint64) {}
	carbon.VertexAttribLFormat = func(attribindex uint32, size int32, xtype uint32, relativeoffset uint32) {}
	carbon.VertexAttribLFormatNV = func(index uint32, size int32, xtype uint32, stride int32) {}
	carbon.VertexAttribLPointer = func(index uint32, size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.VertexAttribP1ui = func(index uint32, xtype uint32, normalized bool, value uint32) {}
	carbon.VertexAttribP1uiv = func(index uint32, xtype uint32, normalized bool, value *uint32) {}
	carbon.VertexAttribP2ui = func(index uint32, xtype uint32, normalized bool, value uint32) {}
	carbon.VertexAttribP2uiv = func(index uint32, xtype uint32, normalized bool, value *uint32) {}
	carbon.VertexAttribP3ui = func(index uint32, xtype uint32, normalized bool, value uint32) {}
	carbon.VertexAttribP3uiv = func(index uint32, xtype uint32, normalized bool, value *uint32) {}
	carbon.VertexAttribP4ui = func(index uint32, xtype uint32, normalized bool, value uint32) {}
	carbon.VertexAttribP4uiv = func(index uint32, xtype uint32, normalized bool, value *uint32) {}
	carbon.VertexAttribPointer = func(index uint32, size int32, xtype uint32, normalized bool, stride int32, pointer unsafe.Pointer) {}
	carbon.VertexBindingDivisor = func(bindingindex uint32, divisor uint32) {}
	carbon.VertexFormatNV = func(size int32, xtype uint32, stride int32) {}
	carbon.VertexPointer = func(size int32, xtype uint32, stride int32, pointer unsafe.Pointer) {}
	carbon.Viewport = func(x int32, y int32, width int32, height int32) {}
	carbon.ViewportArrayv = func(first uint32, count int32, v *float32) {}
	carbon.ViewportIndexedf = func(index uint32, x float32, y float32, w float32, h float32) {}
	carbon.ViewportIndexedfv = func(index uint32, v *float32) {}
	carbon.ViewportPositionWScaleNV = func(index uint32, xcoeff float32, ycoeff float32) {}
	carbon.ViewportSwizzleNV = func(index uint32, swizzlex uint32, swizzley uint32, swizzlez uint32, swizzlew uint32) {}
	carbon.WaitSync = func(sync uintptr, flags uint32, timeout uint64) {}
	carbon.WaitVkSemaphoreNV = func(vkSemaphore uint64) {}
	carbon.WeightPathsNV = func(resultPath uint32, numPaths int32, paths *uint32, weights *float32) {}
	carbon.WindowPos2d = func(x float64, y float64) {}
	carbon.WindowPos2dv = func(v *float64) {}
	carbon.WindowPos2f = func(x float32, y float32) {}
	carbon.WindowPos2fv = func(v *float32) {}
	carbon.WindowPos2i = func(x int32, y int32) {}
	carbon.WindowPos2iv = func(v *int32) {}
	carbon.WindowPos2s = func(x int16, y int16) {}
	carbon.WindowPos2sv = func(v *int16) {}
	carbon.WindowPos3d = func(x float64, y float64, z float64) {}
	carbon.WindowPos3dv = func(v *float64) {}
	carbon.WindowPos3f = func(x float32, y float32, z float32) {}
	carbon.WindowPos3fv = func(v *float32) {}
	carbon.WindowPos3i = func(x int32, y int32, z int32) {}
	carbon.WindowPos3iv = func(v *int32) {}
	carbon.WindowPos3s = func(x int16, y int16, z int16) {}
	carbon.WindowPos3sv = func(v *int16) {}
	carbon.WindowRectanglesEXT = func(mode uint32, count int32, box *int32) {}
	carbon.Init = func() error { return nil }
}
